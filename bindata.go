package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

func assets_css_default_css() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x4a, 0xca,
		0x4f, 0xa9, 0x54, 0xa8, 0xe6, 0xe2, 0x2c, 0x48, 0x4c, 0x49, 0xc9, 0xcc,
		0x4b, 0xd7, 0x2d, 0xc9, 0x2f, 0xb0, 0x52, 0x30, 0x37, 0x28, 0xa8, 0xb0,
		0xe6, 0xaa, 0x05, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x56, 0xf0, 0x95,
		0x1c, 0x00, 0x00, 0x00,
	},
		"assets/css/default.css",
	)
}

func assets_templates_error_html() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xb4, 0x55,
		0xcb, 0x6e, 0xdb, 0x3a, 0x10, 0x5d, 0xc7, 0x5f, 0xc1, 0xf0, 0x6e, 0x43,
		0x09, 0xce, 0xdd, 0xdc, 0x85, 0x24, 0xe0, 0x36, 0x08, 0x8a, 0xac, 0x9b,
		0x02, 0xdd, 0x52, 0xe2, 0x58, 0xa2, 0x43, 0x91, 0x0a, 0x39, 0xb2, 0x2d,
		0x04, 0xf9, 0xf7, 0x0e, 0xf5, 0xf0, 0x0b, 0x0d, 0x9a, 0x2e, 0x6a, 0xc0,
		0xe0, 0x6b, 0x66, 0xce, 0xf0, 0x9c, 0x19, 0x2a, 0xbb, 0x55, 0xae, 0xc2,
		0xa1, 0x03, 0xd6, 0x60, 0x6b, 0x8a, 0x55, 0x16, 0x07, 0x66, 0xa4, 0xad,
		0x73, 0x0e, 0x96, 0x17, 0xab, 0x9b, 0xac, 0x01, 0xa9, 0x68, 0xbc, 0xc9,
		0x5a, 0x40, 0xc9, 0xaa, 0x46, 0xfa, 0x00, 0x98, 0xf3, 0x1e, 0x37, 0xe2,
		0x3f, 0x32, 0x60, 0xf4, 0x9b, 0xcf, 0x1a, 0xc4, 0x4e, 0xc0, 0x6b, 0xaf,
		0x77, 0x39, 0xff, 0x21, 0xbe, 0xff, 0x2f, 0x1e, 0x5c, 0xdb, 0x49, 0xd4,
		0xa5, 0x01, 0xce, 0x2a, 0x67, 0x11, 0x2c, 0x39, 0x3e, 0x3d, 0xe6, 0xa0,
		0x6a, 0xb8, 0x74, 0xb5, 0xb2, 0x85, 0x9c, 0xef, 0x34, 0xec, 0x3b, 0xe7,
		0xf1, 0xcc, 0x7a, 0xaf, 0x15, 0x36, 0xb9, 0x82, 0x9d, 0xae, 0x40, 0x8c,
		0x8b, 0x3b, 0xa6, 0xad, 0x46, 0x2d, 0x8d, 0x08, 0x95, 0x34, 0x90, 0xaf,
		0x29, 0x52, 0x4c, 0x0f, 0x35, 0x1a, 0x28, 0xf6, 0x50, 0x86, 0x21, 0x28,
		0x06, 0xde, 0x3b, 0x9f, 0xa5, 0xd3, 0xe6, 0x78, 0x6e, 0xb4, 0x7d, 0x61,
		0x1e, 0x4c, 0xce, 0x03, 0x0e, 0x06, 0x42, 0x03, 0x40, 0x40, 0x8d, 0x87,
		0x4d, 0xce, 0xd3, 0x2a, 0x84, 0x54, 0xc1, 0x46, 0xf6, 0x06, 0x13, 0x9a,
		0xf3, 0xe2, 0xb7, 0x1e, 0x69, 0xa5, 0xec, 0x36, 0x24, 0x95, 0x71, 0xbd,
		0xda, 0x18, 0xe9, 0x21, 0xa9, 0x5c, 0x9b, 0xca, 0xad, 0x3c, 0xa4, 0x46,
		0x97, 0x21, 0xc5, 0xbd, 0x46, 0x04, 0x2f, 0x4a, 0xe7, 0x30, 0xa0, 0x97,
		0x5d, 0xfa, 0x6f, 0xb2, 0x4e, 0xd6, 0x23, 0xd2, 0x71, 0x6f, 0xc6, 0x8a,
		0x60, 0xa1, 0xf2, 0xba, 0x43, 0x16, 0x7c, 0xf5, 0x89, 0xe0, 0xdb, 0xd7,
		0x1e, 0xfc, 0x90, 0xde, 0x8f, 0x11, 0xa7, 0x45, 0xd2, 0x6a, 0x9b, 0x6c,
		0x29, 0x5a, 0x96, 0x4e, 0xa1, 0x8a, 0x3f, 0x8e, 0xfa, 0x51, 0xca, 0xdb,
		0xf3, 0x8c, 0xaf, 0x20, 0xb2, 0x74, 0xae, 0x8f, 0xac, 0x74, 0x6a, 0x18,
		0x31, 0xad, 0xdc, 0xb1, 0xca, 0xc8, 0x10, 0x72, 0x4e, 0xd3, 0x52, 0x7a,
		0x36, 0x0d, 0x62, 0x26, 0x78, 0x59, 0x6e, 0xf4, 0x01, 0x94, 0x40, 0xd7,
		0x71, 0xe6, 0x1d, 0x09, 0x19, 0xad, 0x75, 0x4d, 0xf5, 0xe2, 0xc6, 0xc2,
		0xa3, 0x48, 0x4a, 0x1f, 0x23, 0xc5, 0x82, 0x90, 0xda, 0x52, 0x76, 0x1b,
		0xd3, 0x6b, 0x35, 0x19, 0x30, 0x96, 0xdd, 0x0a, 0xc1, 0xbe, 0x78, 0x69,
		0x15, 0x8b, 0x7f, 0x74, 0x75, 0x6d, 0x80, 0xd5, 0x80, 0xac, 0xf6, 0xae,
		0xef, 0x40, 0xb1, 0x8d, 0xf3, 0xac, 0x84, 0x78, 0x2f, 0xd6, 0xba, 0x52,
		0xd3, 0xa9, 0xd2, 0xa1, 0x33, 0x72, 0x60, 0x42, 0x2c, 0x41, 0xce, 0x70,
		0xe6, 0xdc, 0xe2, 0xa5, 0xc0, 0x2f, 0x28, 0x64, 0x52, 0xf6, 0x88, 0xce,
		0xb2, 0xd8, 0x2a, 0x39, 0x9f, 0x16, 0xfc, 0xca, 0x67, 0x02, 0xe7, 0x4c,
		0x49, 0x94, 0xf3, 0x22, 0xe6, 0x6d, 0x8c, 0xec, 0xc2, 0x71, 0x5b, 0xfa,
		0x3a, 0x76, 0xcf, 0x3f, 0x65, 0x10, 0x70, 0x90, 0x6d, 0x67, 0x40, 0xcc,
		0xee, 0x8b, 0xa5, 0x58, 0x9f, 0x60, 0x09, 0x38, 0x74, 0xd2, 0x2e, 0x40,
		0xc1, 0x0b, 0x67, 0xcd, 0xc0, 0x8b, 0xe7, 0xe9, 0x9e, 0x27, 0xc2, 0x48,
		0x11, 0xb2, 0xfb, 0xc8, 0x4f, 0x13, 0x7b, 0x82, 0x30, 0x46, 0xe5, 0xfe,
		0xa6, 0x5d, 0x96, 0x4e, 0xd4, 0x9c, 0x36, 0xe4, 0x15, 0x49, 0x65, 0xd4,
		0xea, 0xd8, 0x44, 0x7c, 0xe9, 0xd7, 0x2c, 0x95, 0x8b, 0x18, 0x29, 0xa9,
		0x31, 0xb6, 0xc4, 0x22, 0xef, 0x03, 0x11, 0x03, 0x15, 0x32, 0x6c, 0xc6,
		0x1b, 0xb3, 0xd8, 0x96, 0xe1, 0x2e, 0x0a, 0xdb, 0xd2, 0x10, 0x65, 0x77,
		0x74, 0xe4, 0x97, 0x37, 0x63, 0x54, 0x7c, 0xa4, 0x5f, 0xdb, 0xfa, 0xd7,
		0x22, 0x2f, 0x54, 0xb3, 0x2b, 0xea, 0x39, 0xd3, 0x8a, 0xd4, 0xfd, 0x94,
		0x34, 0x59, 0x6f, 0xce, 0xae, 0xb6, 0x44, 0xa2, 0xe1, 0x42, 0x3d, 0xa3,
		0x0b, 0xa2, 0xe0, 0x78, 0xdb, 0x0b, 0x16, 0x6b, 0x33, 0x74, 0x4d, 0xa4,
		0x92, 0x1d, 0x67, 0x54, 0x1f, 0xe1, 0x25, 0x1c, 0x69, 0x65, 0xcf, 0x71,
		0x19, 0xb9, 0xc9, 0xa8, 0x43, 0xcf, 0x58, 0xee, 0xcd, 0x25, 0x5b, 0xb1,
		0x59, 0x96, 0x59, 0x96, 0x52, 0x12, 0x34, 0x59, 0x7d, 0xd0, 0x40, 0x73,
		0x6f, 0x35, 0xf7, 0xc5, 0xe3, 0xa1, 0x82, 0x2e, 0x56, 0x0f, 0x7b, 0x7b,
		0x4b, 0xbe, 0x3a, 0xa4, 0xb7, 0x3d, 0x79, 0x8c, 0xef, 0xe6, 0x93, 0x7a,
		0x7f, 0xa7, 0xc6, 0xbe, 0x9f, 0x2c, 0x3b, 0x0f, 0xc5, 0xc9, 0xe0, 0x1b,
		0xca, 0xea, 0x25, 0x1e, 0xc7, 0xed, 0xd5, 0x09, 0x97, 0xa4, 0x1f, 0x1f,
		0x00, 0xf2, 0x1b, 0xbf, 0x24, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x9f,
		0x95, 0x40, 0x4f, 0x5a, 0x06, 0x00, 0x00,
	},
		"assets/templates/error.html",
	)
}

func assets_templates_history_html() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xbc, 0x54,
		0xcd, 0x8a, 0xdb, 0x30, 0x10, 0x3e, 0x6f, 0x9e, 0x42, 0x98, 0x1c, 0xbb,
		0xd6, 0xbd, 0xc8, 0x86, 0xb2, 0xf4, 0x50, 0x28, 0x65, 0x69, 0xfa, 0x02,
		0x8a, 0x3d, 0x4e, 0x4c, 0x6c, 0xc9, 0x95, 0xc6, 0xa1, 0xcb, 0xb2, 0xef,
		0xde, 0x19, 0xf9, 0x37, 0xd9, 0x38, 0xa4, 0x25, 0x6c, 0x20, 0xd2, 0x48,
		0xf3, 0xe3, 0x6f, 0xf4, 0xcd, 0x8c, 0x2a, 0xac, 0xab, 0x45, 0x0d, 0xb8,
		0xb7, 0x79, 0x12, 0x35, 0xd6, 0x63, 0x94, 0xae, 0x14, 0xea, 0x6d, 0x05,
		0x22, 0xab, 0xb4, 0xf7, 0x49, 0x14, 0x0e, 0x74, 0xfb, 0xa0, 0xd0, 0xd1,
		0x4a, 0xdb, 0x3e, 0xfd, 0xa5, 0xfd, 0x41, 0x49, 0x12, 0xc2, 0x39, 0x4f,
		0x5f, 0x5f, 0x45, 0xcc, 0x77, 0xf1, 0x0f, 0x5d, 0x83, 0x78, 0x7b, 0x23,
		0x5d, 0xce, 0x1e, 0x32, 0xb8, 0xcc, 0x1c, 0x9f, 0x6c, 0x5d, 0x6b, 0x93,
		0x5f, 0xf4, 0xed, 0x75, 0xd7, 0xdc, 0xbf, 0x9a, 0x63, 0xe9, 0xac, 0xa9,
		0xc1, 0xe0, 0x59, 0x88, 0xb2, 0x10, 0xf1, 0x4c, 0xcb, 0x41, 0x1a, 0x07,
		0xac, 0x71, 0xda, 0xec, 0x40, 0xac, 0x0f, 0x9f, 0xc4, 0xfa, 0x28, 0x3e,
		0x27, 0xe7, 0x66, 0x64, 0xb1, 0x3e, 0xd0, 0x2e, 0x12, 0xc1, 0xe2, 0x91,
		0xc4, 0x15, 0x09, 0xd0, 0x03, 0xe9, 0x83, 0xc0, 0x75, 0x5c, 0x1b, 0xd4,
		0xd8, 0xfa, 0x39, 0x24, 0xda, 0x1e, 0xc6, 0xcc, 0x3a, 0x35, 0x47, 0x16,
		0xf4, 0x0b, 0x0a, 0xc2, 0x0b, 0xbf, 0x4f, 0xd5, 0xd1, 0x06, 0x6d, 0xd3,
		0x40, 0x1e, 0x4d, 0x86, 0x6a, 0xdb, 0x22, 0x5a, 0x23, 0x98, 0x25, 0x9d,
		0x61, 0x69, 0x4d, 0x12, 0x49, 0x24, 0x1f, 0x39, 0xc6, 0xfe, 0xc6, 0xc0,
		0xa4, 0x47, 0xed, 0x30, 0x1a, 0x28, 0xdb, 0xa2, 0x11, 0xf4, 0x7f, 0xfc,
		0xe3, 0xc3, 0xe6, 0xdb, 0x2c, 0x03, 0xef, 0xa3, 0x54, 0xf9, 0x46, 0x9b,
		0xc1, 0x68, 0x57, 0xbd, 0x34, 0xfb, 0x32, 0xa3, 0xe8, 0xa3, 0xf4, 0xd8,
		0x54, 0xfa, 0x85, 0xcc, 0x24, 0xdb, 0xa5, 0x62, 0xc3, 0x41, 0x95, 0xec,
		0x30, 0xa4, 0x13, 0x76, 0xa8, 0x3c, 0xfc, 0x17, 0x46, 0xdb, 0x2c, 0x41,
		0xcc, 0x99, 0x24, 0x77, 0x03, 0xc2, 0x10, 0x64, 0x86, 0xd0, 0x36, 0x97,
		0x00, 0x06, 0xb6, 0x98, 0x89, 0x25, 0xc2, 0xbe, 0x10, 0xd0, 0x23, 0x08,
		0x3c, 0xab, 0xe3, 0x9e, 0x35, 0x2e, 0xa6, 0x00, 0xbc, 0x33, 0x63, 0x71,
		0xca, 0x77, 0xa2, 0xf5, 0xa2, 0x56, 0xe9, 0xa5, 0x14, 0xa1, 0xd0, 0x6d,
		0x45, 0x24, 0xed, 0x1d, 0x14, 0x0b, 0x4f, 0xe4, 0x5a, 0x23, 0x2f, 0x84,
		0x1f, 0x1f, 0x30, 0xb7, 0x2d, 0xde, 0xf0, 0x48, 0x45, 0xc9, 0x1d, 0x3b,
		0x3c, 0x52, 0xe7, 0xa6, 0xa4, 0x4e, 0x3f, 0x06, 0x23, 0xb8, 0x5b, 0x88,
		0x7c, 0x87, 0x91, 0xdc, 0x66, 0x18, 0x27, 0x16, 0xc3, 0xf9, 0x84, 0x48,
		0x5a, 0x79, 0x26, 0xa5, 0xab, 0x1b, 0x26, 0xd5, 0x73, 0x39, 0x1b, 0x36,
		0xa1, 0x51, 0x1d, 0xc2, 0xd9, 0x55, 0xe8, 0xba, 0xf9, 0xd5, 0x77, 0xbb,
		0x1b, 0x9a, 0xb9, 0xfb, 0x22, 0x4f, 0x06, 0x4e, 0x92, 0x72, 0xe4, 0x09,
		0x32, 0xe5, 0xbb, 0x1a, 0x07, 0x4c, 0x77, 0xc9, 0xcb, 0xcf, 0xd6, 0x8c,
		0xbd, 0x1e, 0x90, 0x74, 0x19, 0xf4, 0xa3, 0xee, 0xa9, 0xce, 0xe3, 0x67,
		0x67, 0xb9, 0x21, 0x63, 0x02, 0x37, 0x4e, 0x95, 0x13, 0xa3, 0x1e, 0xe6,
		0x92, 0x32, 0x00, 0x7e, 0xaf, 0x1c, 0x1a, 0xf2, 0x5f, 0xd9, 0x1d, 0x52,
		0x9b, 0x91, 0x7b, 0xdf, 0x82, 0xbb, 0x2b, 0xa2, 0x7b, 0x94, 0xd7, 0xf4,
		0x70, 0x23, 0xbf, 0x7d, 0xb5, 0x8d, 0xb5, 0xa5, 0x24, 0x0f, 0xb4, 0xf4,
		0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xb5, 0xba, 0xe5, 0x21, 0x07,
		0x00, 0x00,
	},
		"assets/templates/history.html",
	)
}

func assets_templates_index_html() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xb4, 0x55,
		0xcd, 0x8a, 0xdb, 0x30, 0x10, 0x3e, 0x67, 0x9f, 0x42, 0x98, 0x1c, 0x5a,
		0xe8, 0xc6, 0xf7, 0xa2, 0x18, 0x4a, 0xe9, 0xa1, 0x97, 0x5c, 0xd2, 0x4b,
		0x8f, 0x8a, 0x35, 0x5e, 0x8b, 0xd8, 0x92, 0x2a, 0xc9, 0xa6, 0xcb, 0xb2,
		0xef, 0xde, 0x19, 0x4b, 0x71, 0x1c, 0xc7, 0xa1, 0xa6, 0x50, 0xc3, 0xae,
		0x46, 0x9a, 0xbf, 0x4f, 0xf3, 0xcd, 0x28, 0xbc, 0x32, 0xae, 0x65, 0x2d,
		0x84, 0xda, 0xc8, 0x7d, 0x66, 0x8d, 0x0f, 0x59, 0xf1, 0xc4, 0x83, 0x38,
		0x35, 0xc0, 0xca, 0x46, 0x78, 0xbf, 0xcf, 0x86, 0x0d, 0x9e, 0x6e, 0x78,
		0x70, 0xf8, 0x1f, 0x97, 0xba, 0xf8, 0x21, 0xfc, 0x99, 0xe7, 0x28, 0xa4,
		0xfd, 0x57, 0xd3, 0xb6, 0x42, 0xcb, 0xe9, 0xd1, 0x37, 0xdd, 0x2b, 0x67,
		0x74, 0x0b, 0x3a, 0xc4, 0x63, 0x96, 0x3e, 0x52, 0x1e, 0xc1, 0xf5, 0xaa,
		0x84, 0xa9, 0xfd, 0x97, 0x32, 0xa8, 0x1e, 0x58, 0x18, 0x23, 0xdf, 0xd8,
		0x07, 0x11, 0x3a, 0x7f, 0x7f, 0x4e, 0x4e, 0x46, 0x2f, 0x28, 0x52, 0x64,
		0x5c, 0x10, 0xf3, 0xdb, 0x1b, 0x73, 0x42, 0xbf, 0x00, 0xdb, 0x11, 0x6e,
		0xcf, 0xde, 0xdf, 0x9f, 0xa2, 0x9d, 0x8b, 0x4e, 0x98, 0x5f, 0x16, 0x68,
		0xb4, 0x3b, 0x88, 0x16, 0x50, 0x8b, 0x5e, 0x72, 0xa6, 0x49, 0x17, 0x5c,
		0x54, 0xaa, 0x8a, 0xed, 0x26, 0xb7, 0x25, 0x1b, 0xeb, 0xa0, 0x18, 0xb3,
		0x6e, 0xcf, 0x9f, 0xd8, 0xb6, 0x67, 0x9f, 0xf7, 0x73, 0x33, 0xb4, 0xd8,
		0x9e, 0x71, 0x65, 0x7b, 0x46, 0x62, 0x4f, 0xc0, 0x50, 0x80, 0x94, 0x27,
		0x05, 0x81, 0x59, 0xda, 0x08, 0x7d, 0xb2, 0xa1, 0x2f, 0xc1, 0x48, 0x75,
		0xbd, 0xdc, 0x70, 0xfa, 0xfd, 0x04, 0xcf, 0x3e, 0x8c, 0x68, 0x89, 0x53,
		0x0a, 0x0b, 0x51, 0xa2, 0x34, 0x8d, 0x27, 0x3f, 0xa9, 0xfc, 0x78, 0x32,
		0x24, 0xfe, 0x38, 0xcf, 0x93, 0x0c, 0xef, 0x12, 0x1c, 0xcc, 0x9d, 0xe5,
		0x10, 0xe0, 0x0a, 0xfa, 0xb6, 0x72, 0x51, 0xda, 0x24, 0x48, 0x91, 0x7e,
		0xe2, 0xe7, 0xe2, 0xb2, 0x19, 0x74, 0xcb, 0x0a, 0x2e, 0x2e, 0xdd, 0x79,
		0x0a, 0x9a, 0xe1, 0xdf, 0xf3, 0x6f, 0x3f, 0x2c, 0x12, 0x2a, 0xd1, 0x35,
		0x21, 0x63, 0xb5, 0x83, 0x6a, 0x9f, 0xe5, 0xd4, 0x4e, 0x39, 0x85, 0xf9,
		0x4e, 0x50, 0x72, 0xd7, 0xe9, 0xfc, 0x36, 0x68, 0x52, 0xf8, 0x20, 0x4d,
		0x87, 0xbd, 0xcf, 0xbd, 0x15, 0xfa, 0x12, 0xfb, 0xa5, 0x79, 0xb5, 0xb5,
		0x2a, 0x8d, 0x66, 0xa3, 0xf4, 0x5c, 0x29, 0x1a, 0x06, 0x9e, 0x93, 0x5d,
		0xc1, 0xa2, 0x1b, 0xcf, 0x45, 0xf1, 0x3f, 0x91, 0x81, 0x73, 0xff, 0x82,
		0x0c, 0xdd, 0x46, 0x64, 0x2b, 0xf8, 0xe3, 0xaa, 0x38, 0x18, 0x8d, 0x33,
		0xa9, 0x26, 0xd4, 0x4c, 0x28, 0xdc, 0xfc, 0xbd, 0x05, 0x77, 0x71, 0x4e,
		0x97, 0x49, 0x7f, 0xe4, 0x84, 0xec, 0xc3, 0xaf, 0xd1, 0x35, 0x3b, 0x06,
		0x63, 0x2d, 0xc8, 0x6c, 0x0e, 0x91, 0x9f, 0xba, 0x10, 0xf0, 0xc2, 0xf4,
		0x60, 0x89, 0x61, 0xec, 0xef, 0x8b, 0xe8, 0x83, 0x70, 0x58, 0xe1, 0x65,
		0x02, 0x7c, 0x57, 0x96, 0xe0, 0xfd, 0x8a, 0x4a, 0xda, 0x46, 0xbc, 0x5e,
		0x2b, 0x79, 0xa4, 0xa0, 0x3c, 0x8f, 0xe9, 0x57, 0x55, 0x73, 0x1d, 0x54,
		0x63, 0x1f, 0x21, 0x95, 0xf4, 0x6c, 0xac, 0xa1, 0x7c, 0x08, 0x32, 0x01,
		0x6a, 0xec, 0x63, 0x9c, 0x8f, 0x66, 0x71, 0x91, 0x16, 0xec, 0xe2, 0xe5,
		0x36, 0xad, 0x15, 0xe6, 0x74, 0x58, 0x9d, 0x61, 0x20, 0xd3, 0xee, 0xa6,
		0xcb, 0xae, 0x91, 0xc7, 0xc7, 0x37, 0xe5, 0xc6, 0x3d, 0x3d, 0x2d, 0xf8,
		0xfb, 0x92, 0x53, 0x65, 0x8a, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4e,
		0x88, 0x3d, 0xef, 0x7c, 0x06, 0x00, 0x00,
	},
		"assets/templates/index.html",
	)
}

func assets_templates_layout_html() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xb4, 0x55,
		0x4d, 0x8f, 0xa4, 0x36, 0x10, 0x3d, 0xef, 0xfe, 0x8a, 0x5a, 0xe7, 0xba,
		0x06, 0x4d, 0x72, 0xc9, 0x01, 0x90, 0x92, 0x51, 0xa4, 0xe4, 0x96, 0xc3,
		0x44, 0xca, 0xd5, 0xe0, 0x02, 0xdc, 0x6b, 0x6c, 0xc6, 0x2e, 0xba, 0x07,
		0xb5, 0xfa, 0xbf, 0xa7, 0x0c, 0x4d, 0x7f, 0x29, 0xa3, 0x4c, 0x0e, 0x3b,
		0xd2, 0xc8, 0x36, 0xae, 0xaa, 0xf7, 0xfc, 0x5e, 0xd9, 0x5d, 0x7c, 0xd1,
		0xbe, 0xa1, 0x79, 0x44, 0xe8, 0x69, 0xb0, 0xd5, 0xe7, 0x22, 0x0d, 0x60,
		0x95, 0xeb, 0x4a, 0x81, 0x4e, 0x54, 0x9f, 0x3f, 0x15, 0x3d, 0x2a, 0xcd,
		0xe3, 0xa7, 0x62, 0x40, 0x52, 0xd0, 0xf4, 0x2a, 0x44, 0xa4, 0x52, 0x4c,
		0xd4, 0xca, 0x9f, 0x39, 0x00, 0xf8, 0xef, 0xbc, 0xd7, 0x13, 0x8d, 0x12,
		0x5f, 0x27, 0xb3, 0x2f, 0xc5, 0xdf, 0xf2, 0xaf, 0x5f, 0xe4, 0xb3, 0x1f,
		0x46, 0x45, 0xa6, 0xb6, 0x28, 0xa0, 0xf1, 0x8e, 0xd0, 0x71, 0xe2, 0x1f,
		0xbf, 0x95, 0xa8, 0x3b, 0xbc, 0x4f, 0x75, 0x6a, 0xc0, 0x52, 0xec, 0x0d,
		0x1e, 0x46, 0x1f, 0xe8, 0x26, 0xfa, 0x60, 0x34, 0xf5, 0xa5, 0xc6, 0xbd,
		0x69, 0x50, 0x2e, 0x8b, 0xaf, 0x60, 0x9c, 0x21, 0xa3, 0xac, 0x8c, 0x8d,
		0xb2, 0x58, 0x3e, 0x71, 0xa5, 0x44, 0x8f, 0x0c, 0x59, 0xac, 0x8e, 0xc7,
		0xec, 0x25, 0x4d, 0x4e, 0xa7, 0x22, 0x5f, 0xbf, 0x2c, 0x9b, 0xd6, 0xb8,
		0x6f, 0x10, 0xd0, 0x96, 0x22, 0xd2, 0x6c, 0x31, 0xf6, 0x88, 0x8c, 0xd2,
		0x07, 0x6c, 0x4b, 0x91, 0x37, 0x31, 0xe6, 0x1a, 0x5b, 0x35, 0x59, 0xca,
		0x78, 0x2e, 0xaa, 0xff, 0xcc, 0xc8, 0x1b, 0xed, 0x76, 0x31, 0x6b, 0xac,
		0x9f, 0x74, 0x6b, 0x55, 0xc0, 0xac, 0xf1, 0x43, 0xae, 0x76, 0xea, 0x2d,
		0xb7, 0xa6, 0x8e, 0x39, 0x1d, 0x0c, 0x11, 0x06, 0x59, 0x7b, 0x4f, 0x91,
		0x82, 0x1a, 0xf3, 0x9f, 0xb2, 0xa7, 0xec, 0x69, 0x41, 0xba, 0x7c, 0x3b,
		0x63, 0x25, 0xb0, 0xd8, 0x04, 0x33, 0x12, 0xc4, 0xd0, 0x7c, 0xa0, 0xf8,
		0xee, 0x75, 0xc2, 0x30, 0xe7, 0x3f, 0x2e, 0x15, 0xd7, 0x45, 0x36, 0x18,
		0x97, 0xed, 0xb8, 0x5a, 0x91, 0xaf, 0xa5, 0xaa, 0xff, 0x5d, 0xf5, 0x3d,
		0xca, 0xbb, 0x5b, 0xc6, 0x0f, 0x10, 0x45, 0x7e, 0x6e, 0x8e, 0xa2, 0xf6,
		0x7a, 0x5e, 0x30, 0x9d, 0xda, 0x43, 0x63, 0x55, 0x8c, 0xa5, 0xe0, 0x69,
		0xad, 0x02, 0xac, 0x83, 0x3c, 0x0b, 0xbc, 0x2d, 0x5b, 0xf3, 0x86, 0x5a,
		0x92, 0x1f, 0x05, 0x04, 0xcf, 0x2e, 0xa6, 0x68, 0xd3, 0x71, 0xb3, 0xf8,
		0xa5, 0xeb, 0xb8, 0x92, 0x36, 0x97, 0x4a, 0xa9, 0x1b, 0x94, 0x71, 0xcc,
		0xae, 0xb5, 0x93, 0xd1, 0x6b, 0x00, 0x40, 0xf1, 0x45, 0x4a, 0xf8, 0x35,
		0x28, 0xa7, 0x21, 0xfd, 0x93, 0xef, 0x3a, 0x8b, 0xd0, 0x21, 0x41, 0x17,
		0xfc, 0x34, 0xa2, 0x86, 0xd6, 0x07, 0xa8, 0x31, 0x9d, 0x0b, 0x06, 0x5f,
		0x1b, 0xde, 0xd5, 0x26, 0x8e, 0x56, 0xcd, 0x20, 0xe5, 0x56, 0xe4, 0x06,
		0xe7, 0xcc, 0x2d, 0x1d, 0x0a, 0xc3, 0x86, 0xc2, 0x21, 0xf5, 0x44, 0xe4,
		0x1d, 0xa4, 0x7b, 0x52, 0x8a, 0x75, 0x21, 0x1e, 0x72, 0x56, 0x70, 0x01,
		0x5a, 0x91, 0x3a, 0x2f, 0x12, 0x6f, 0x6b, 0xd5, 0x18, 0x2f, 0x9f, 0x55,
		0xe8, 0xd2, 0xd5, 0xf9, 0xa1, 0x8e, 0x12, 0xdf, 0xd4, 0x30, 0x5a, 0x94,
		0xe7, 0xf4, 0x2d, 0x52, 0x3e, 0x5d, 0x61, 0x19, 0x38, 0x8e, 0xca, 0x6d,
		0x40, 0x31, 0x48, 0xef, 0xec, 0x2c, 0xaa, 0x97, 0xf5, 0x9c, 0x57, 0xc1,
		0xd8, 0x11, 0x8e, 0x7b, 0x2f, 0xcf, 0xb0, 0x7a, 0x92, 0x31, 0x16, 0xe7,
		0xbe, 0x67, 0x5c, 0x91, 0xaf, 0xd2, 0x5c, 0x3f, 0xa8, 0x07, 0x91, 0xea,
		0xe4, 0xd5, 0xe5, 0x12, 0x89, 0xea, 0x80, 0x75, 0x9c, 0xa3, 0x2e, 0x72,
		0xb5, 0x99, 0x91, 0xb3, 0x1b, 0xcb, 0x95, 0xd8, 0xec, 0x7d, 0x66, 0x61,
		0xb0, 0x21, 0xa0, 0x7e, 0x39, 0x31, 0xa4, 0x6b, 0x19, 0xbf, 0x26, 0x63,
		0x07, 0x1e, 0x92, 0xed, 0x9e, 0xb7, 0xc2, 0xf6, 0x60, 0x2c, 0x8e, 0x2f,
		0xf2, 0x1b, 0xd7, 0xfd, 0xbb, 0xc9, 0x9b, 0xd4, 0xf0, 0x20, 0xbd, 0x00,
		0xa3, 0xd9, 0xdd, 0x0f, 0x59, 0x53, 0x4c, 0xf6, 0xe6, 0x68, 0x5b, 0x25,
		0x1e, 0xee, 0xdc, 0xb3, 0xe6, 0x78, 0x04, 0xd3, 0x02, 0xbe, 0x42, 0xf6,
		0xa7, 0xea, 0x10, 0xc4, 0x8b, 0x8a, 0xdf, 0xa2, 0x80, 0xd3, 0x69, 0xcb,
		0x56, 0x0d, 0x99, 0x3d, 0x8a, 0xe3, 0x11, 0x9d, 0x3e, 0x9d, 0x2a, 0x56,
		0xec, 0x22, 0xce, 0x9d, 0xe8, 0x9d, 0x9d, 0xc7, 0x3e, 0x29, 0x0f, 0x97,
		0x19, 0xb7, 0x53, 0x2a, 0xb6, 0xb9, 0x00, 0x4b, 0xed, 0x24, 0x65, 0xc1,
		0x17, 0xfa, 0x86, 0xc6, 0x23, 0x87, 0xdf, 0x4d, 0x24, 0x1f, 0xe6, 0xc4,
		0x82, 0x19, 0x3e, 0x10, 0xb9, 0x32, 0xf8, 0x08, 0x81, 0x5e, 0x5a, 0x2e,
		0x76, 0x4f, 0x01, 0xfa, 0xb5, 0xfe, 0x85, 0x09, 0xe3, 0xf3, 0xe1, 0x18,
		0xed, 0xda, 0x27, 0x93, 0xbd, 0xf7, 0x3b, 0x5d, 0xf7, 0x6d, 0x56, 0xe4,
		0x2c, 0xe3, 0xd2, 0x02, 0xfc, 0x94, 0x3f, 0xaf, 0xae, 0xa6, 0x5c, 0xee,
		0xae, 0xe5, 0x8d, 0xe1, 0x37, 0x67, 0xf9, 0xa5, 0xfa, 0x27, 0x00, 0x00,
		0xff, 0xff, 0xc3, 0x8f, 0x7e, 0xa6, 0xba, 0x06, 0x00, 0x00,
	},
		"assets/templates/layout.html",
	)
}

func assets_templates_log_html() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xb2, 0xc9,
		0x30, 0xb4, 0xab, 0xae, 0x56, 0xd0, 0x0b, 0xa9, 0x2c, 0x48, 0x55, 0xa8,
		0xad, 0xb5, 0xd1, 0x07, 0xf2, 0xb9, 0x6c, 0x0a, 0x8a, 0x52, 0xc1, 0xa2,
		0x3e, 0xf9, 0xe9, 0xfe, 0xa5, 0x25, 0x05, 0xa5, 0x25, 0x60, 0x29, 0x90,
		0x28, 0x20, 0x00, 0x00, 0xff, 0xff, 0xaf, 0xce, 0x7c, 0xc8, 0x30, 0x00,
		0x00, 0x00,
	},
		"assets/templates/log.html",
	)
}

func assets_templates_notfound_html() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xb4, 0x55,
		0x4d, 0x6f, 0xe3, 0x38, 0x0c, 0x3d, 0x37, 0xbf, 0x82, 0xd5, 0x5e, 0xab,
		0x18, 0xe9, 0x5e, 0xf6, 0x60, 0x1b, 0xd8, 0x2d, 0xf6, 0xb0, 0xb7, 0x3d,
		0x74, 0x81, 0xbd, 0xca, 0x16, 0x63, 0x2b, 0x95, 0x25, 0x57, 0xa2, 0x93,
		0xfa, 0xdf, 0x0f, 0xe5, 0x8f, 0x7c, 0x61, 0x8a, 0xe9, 0x1c, 0x26, 0x40,
		0x20, 0x89, 0x22, 0xf9, 0xc8, 0xf7, 0xc4, 0x24, 0x7f, 0xd4, 0xbe, 0xa6,
		0xb1, 0x47, 0x68, 0xa9, 0xb3, 0xe5, 0x26, 0x4f, 0x0b, 0x58, 0xe5, 0x9a,
		0x42, 0xa0, 0x13, 0xe5, 0xe6, 0x21, 0x6f, 0x51, 0x69, 0x5e, 0x1f, 0xf2,
		0x0e, 0x49, 0x41, 0xdd, 0xaa, 0x10, 0x91, 0x0a, 0x31, 0xd0, 0x5e, 0xfe,
		0xc1, 0x0e, 0xc0, 0x9f, 0xe5, 0xae, 0x25, 0xea, 0x25, 0xbe, 0x0f, 0xe6,
		0x58, 0x88, 0xff, 0xe5, 0x7f, 0x7f, 0xca, 0x17, 0xdf, 0xf5, 0x8a, 0x4c,
		0x65, 0x51, 0x40, 0xed, 0x1d, 0xa1, 0xe3, 0xc0, 0x7f, 0xfe, 0x2e, 0x50,
		0x37, 0x78, 0x1b, 0xea, 0x54, 0x87, 0x85, 0x38, 0x1a, 0x3c, 0xf5, 0x3e,
		0xd0, 0x95, 0xf7, 0xc9, 0x68, 0x6a, 0x0b, 0x8d, 0x47, 0x53, 0xa3, 0x9c,
		0x0e, 0x4f, 0x60, 0x9c, 0x21, 0xa3, 0xac, 0x8c, 0xb5, 0xb2, 0x58, 0xec,
		0x38, 0x53, 0x2a, 0x8f, 0x0c, 0x59, 0x2c, 0x4f, 0x58, 0xc5, 0x31, 0x6a,
		0xc0, 0x10, 0x7c, 0xc8, 0xb3, 0xd9, 0x38, 0xdd, 0x5b, 0xe3, 0xde, 0x20,
		0xa0, 0x2d, 0x44, 0xa4, 0xd1, 0x62, 0x6c, 0x11, 0x19, 0xa8, 0x0d, 0xb8,
		0x2f, 0x44, 0x56, 0xc7, 0x98, 0x69, 0xdc, 0xab, 0xc1, 0xd2, 0x96, 0xf7,
		0xa2, 0xfc, 0x61, 0x44, 0x56, 0x6b, 0x77, 0x88, 0xdb, 0xda, 0xfa, 0x41,
		0xef, 0xad, 0x0a, 0xb8, 0xad, 0x7d, 0x97, 0xa9, 0x83, 0xfa, 0xc8, 0xac,
		0xa9, 0x62, 0x46, 0x27, 0x43, 0x84, 0x41, 0x56, 0xde, 0x53, 0xa4, 0xa0,
		0xfa, 0xec, 0xf7, 0xed, 0x6e, 0xbb, 0x9b, 0x90, 0xce, 0xb6, 0x05, 0x2b,
		0x81, 0xc5, 0x3a, 0x98, 0x9e, 0x20, 0x86, 0xfa, 0x0b, 0xc9, 0x0f, 0xef,
		0x03, 0x86, 0x31, 0x7b, 0x9e, 0x32, 0xce, 0x87, 0x6d, 0x67, 0xdc, 0xf6,
		0xc0, 0xd9, 0xf2, 0x6c, 0x4e, 0x55, 0xfe, 0x74, 0xd6, 0xcf, 0x4a, 0x3e,
		0x5c, 0x57, 0x7c, 0x07, 0x91, 0x67, 0xcb, 0xfb, 0xc8, 0x2b, 0xaf, 0xc7,
		0x09, 0xd3, 0xa9, 0x23, 0xd4, 0x56, 0xc5, 0x58, 0x08, 0xde, 0x56, 0x2a,
		0xc0, 0xbc, 0xc8, 0x85, 0xe0, 0xf5, 0xb8, 0x37, 0x1f, 0xa8, 0x25, 0xf9,
		0x5e, 0x40, 0xf0, 0x2c, 0x64, 0xf2, 0x36, 0x0d, 0xbf, 0x17, 0x3f, 0x3d,
		0x3c, 0xce, 0xa4, 0xcd, 0x39, 0x53, 0x7a, 0x10, 0xca, 0x38, 0xae, 0x6e,
		0x6f, 0x07, 0xa3, 0x67, 0x07, 0x80, 0xfc, 0x51, 0x4a, 0xf8, 0x2b, 0x28,
		0xa7, 0x21, 0x7d, 0xc9, 0x37, 0x8d, 0x45, 0x68, 0x90, 0xa0, 0x09, 0x7e,
		0xe8, 0x51, 0xc3, 0xde, 0x07, 0xa8, 0x30, 0xf5, 0x05, 0x9d, 0xaf, 0x0c,
		0xdf, 0x6a, 0x13, 0x7b, 0xab, 0x46, 0x90, 0x72, 0x4d, 0x72, 0x85, 0xb3,
		0xd4, 0x96, 0x9a, 0xc2, 0xb0, 0xa2, 0xb0, 0x4b, 0x35, 0x10, 0x79, 0x07,
		0x69, 0x54, 0x0a, 0x31, 0x1f, 0xc4, 0x5d, 0xcc, 0x0c, 0x2e, 0x40, 0x2b,
		0x52, 0xcb, 0x21, 0xd5, 0x6d, 0xad, 0xea, 0xe3, 0xd9, 0xac, 0x42, 0x93,
		0xa6, 0xe7, 0xb7, 0x2a, 0x4a, 0xfc, 0x50, 0x5d, 0x6f, 0x51, 0x2e, 0xe1,
		0xab, 0xa7, 0xdc, 0x5d, 0x60, 0x19, 0x38, 0xf6, 0xca, 0xad, 0x40, 0x31,
		0x48, 0xef, 0xec, 0x28, 0xca, 0xd7, 0xb9, 0xcf, 0x0b, 0x61, 0xac, 0x08,
		0xfb, 0x7d, 0x16, 0x67, 0x98, 0x3d, 0xc9, 0x18, 0x93, 0x72, 0xbf, 0xd2,
		0x2f, 0xcf, 0x66, 0x6a, 0x2e, 0x06, 0x75, 0x47, 0x52, 0x95, 0xb4, 0x3a,
		0x0f, 0x91, 0x58, 0xe7, 0x35, 0xcf, 0xd4, 0x2a, 0x46, 0xc6, 0x6a, 0x4c,
		0x23, 0xb1, 0xca, 0xfb, 0xc2, 0xc4, 0x60, 0x4d, 0x40, 0xed, 0xd4, 0x31,
		0xa4, 0xb1, 0x8c, 0x4f, 0x49, 0xd8, 0x8e, 0x97, 0x24, 0xbb, 0xe7, 0xab,
		0xb0, 0xfe, 0x66, 0x4c, 0x8a, 0x4f, 0xf4, 0x1b, 0xd7, 0x7c, 0x5f, 0xe4,
		0x95, 0x6a, 0xb8, 0xa3, 0x5e, 0x80, 0xd1, 0xac, 0xee, 0x97, 0xa4, 0xc9,
		0x07, 0x7b, 0xd5, 0xda, 0x9a, 0x89, 0x97, 0x1b, 0xf5, 0xac, 0x29, 0x99,
		0x82, 0x73, 0xb7, 0x37, 0x2c, 0x36, 0x76, 0xec, 0xdb, 0x44, 0x25, 0x9c,
		0x77, 0xfc, 0x3e, 0xe2, 0x5b, 0x3c, 0xd3, 0x0a, 0xaf, 0xe9, 0x98, 0xb8,
		0xc9, 0x79, 0x42, 0xaf, 0x58, 0x1e, 0xec, 0x2d, 0x5b, 0x69, 0x58, 0xd6,
		0x5d, 0x9e, 0x71, 0x11, 0xbc, 0xd9, 0x7c, 0x32, 0x40, 0xcb, 0x6c, 0xb5,
		0xcf, 0xe5, 0xbf, 0xaa, 0x61, 0x0a, 0x7c, 0x62, 0x6c, 0x70, 0x2c, 0x01,
		0x9b, 0x36, 0x97, 0x44, 0xac, 0xe5, 0x34, 0xd1, 0x6c, 0x9f, 0xfe, 0x1a,
		0xbe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x60, 0x90, 0x31, 0x2b, 0x06,
		0x00, 0x00,
	},
		"assets/templates/notfound.html",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"assets/css/default.css":         assets_css_default_css,
	"assets/templates/error.html":    assets_templates_error_html,
	"assets/templates/history.html":  assets_templates_history_html,
	"assets/templates/index.html":    assets_templates_index_html,
	"assets/templates/layout.html":   assets_templates_layout_html,
	"assets/templates/log.html":      assets_templates_log_html,
	"assets/templates/notfound.html": assets_templates_notfound_html,
}
