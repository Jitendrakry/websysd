// Code generated by go-bindata.
// sources:
// assets/css/default.css
// assets/templates/applog.html
// assets/templates/error.html
// assets/templates/layout.html
// assets/templates/log.html
// assets/templates/notfound.html
// assets/templates/task.html
// assets/templates/taskrun.html
// assets/templates/tasks.html
// assets/templates/workspaces.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCssDefaultCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\xca\x4f\xa9\x54\xa8\xe6\xe2\x2c\x48\x4c\x49\xc9\xcc\x4b\xd7\x2d\xc9\x2f\xb0\x52\x30\x37\x28\xa8\xb0\xe6\xaa\xe5\xca\x30\x02\x49\xe5\x26\x16\xa5\x67\xe6\x41\x64\x0c\xac\xe1\xfc\xa4\xfc\x92\x92\xfc\x5c\x2b\x05\x23\x88\x62\x40\x00\x00\x00\xff\xff\x28\xaf\x7a\xd0\x49\x00\x00\x00")

func assetsCssDefaultCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsCssDefaultCss,
		"assets/css/default.css",
	)
}

func assetsCssDefaultCss() (*asset, error) {
	bytes, err := assetsCssDefaultCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/css/default.css", size: 73, mode: os.FileMode(420), modTime: time.Unix(1456002792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesApplogHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8d\x51\x0a\x83\x30\x0c\x86\x9f\xd7\x53\x04\x0f\xa0\xb0\x47\xcd\x7a\x82\xc1\xce\x50\x6d\x50\x99\x34\xd2\xa6\x13\x91\xde\x7d\x19\x73\xcb\x5b\xbe\x1f\xbe\x0f\x93\xec\x0b\x59\x53\x0f\x1c\xc4\xcd\x81\x22\x1c\x06\xf4\xb6\xd9\xcb\xd4\x82\xcb\xc2\x9d\x29\x66\x8d\x74\x0e\xbd\x1b\x9e\x63\xe4\x1c\x7c\x0b\x81\x03\x75\x5f\xca\xd1\x53\xfc\x91\x62\xb0\x39\xc5\xe8\xe7\x17\x0c\x8b\x4b\xe9\x56\xfd\x1b\x95\x35\x17\x9c\xae\x76\xa3\x3e\xed\xc9\xc3\xc2\x23\x36\xfa\x2b\xd5\x90\x3d\x0e\xa8\xef\x3c\x3e\xb2\xac\x59\xa0\x14\x6c\x3e\x54\x9d\xea\xb2\xef\x00\x00\x00\xff\xff\xf6\x29\xcc\xac\xb2\x00\x00\x00")

func assetsTemplatesApplogHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesApplogHtml,
		"assets/templates/applog.html",
	)
}

func assetsTemplatesApplogHtml() (*asset, error) {
	bytes, err := assetsTemplatesApplogHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/applog.html", size: 178, mode: os.FileMode(420), modTime: time.Unix(1456002792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesErrorHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\xcd\x6e\xdc\x36\x10\x3e\xdb\x4f\x31\x51\xaf\xa1\x88\x75\x2f\x3d\x48\x0b\xb4\x81\x51\xe4\xdc\x16\xed\x95\x22\x67\x25\xae\x29\x52\x21\x47\xb6\x17\x41\xde\xbd\x43\xfd\x59\x6b\xd4\xad\x7b\xc8\x02\x0b\x72\xc8\xf9\xfd\xbe\x19\xaa\xfa\x60\x82\xa6\xcb\x80\xd0\x51\xef\x8e\xb7\x55\x5e\xc0\x29\xdf\xd6\x05\xfa\xe2\x78\x7b\x53\x75\xa8\x0c\xaf\x37\x55\x8f\xa4\x40\x77\x2a\x26\xa4\xba\x18\xe9\x24\x7e\x62\x05\xe0\xdf\x72\xd7\x11\x0d\x02\xbf\x8c\xf6\xb1\x2e\xfe\x12\x7f\xfc\x2c\x3e\x85\x7e\x50\x64\x1b\x87\x05\xe8\xe0\x09\x3d\x1b\x7e\xbe\xaf\xd1\xb4\x78\x6d\xea\x55\x8f\x75\xf1\x68\xf1\x69\x08\x91\x76\xda\x4f\xd6\x50\x57\x1b\x7c\xb4\x1a\xc5\x24\x7c\x04\xeb\x2d\x59\xe5\x44\xd2\xca\x61\x7d\x60\x4f\x39\x3d\xb2\xe4\xf0\xf8\x84\x4d\xba\x24\x03\x18\x63\x88\x95\x9c\x0f\xa7\x7b\x67\xfd\x03\x44\x74\x75\x91\xe8\xe2\x30\x75\x88\x1c\xa8\x8b\x78\xaa\x0b\x29\xb5\xf1\xe7\x54\x6a\x17\x46\x73\x72\x2a\x62\xa9\x43\x2f\xd5\x59\x3d\x4b\x67\x9b\x24\xe9\xc9\x12\x61\x14\x4d\x08\x94\x28\xaa\x41\xfe\x58\x1e\xca\x83\xd4\x29\xc9\xed\xac\x64\x69\x49\x26\xe9\x68\x07\x82\x14\xf5\x3b\x9c\x9f\xbf\x8c\x18\x2f\xf2\x6e\xf2\x38\x0b\x65\x6f\x7d\x79\x66\x6f\x95\x9c\x5d\x1d\xff\xb7\xd7\xb7\x52\x3e\xef\x33\xbe\x0e\xf1\x9f\x30\xe5\x72\x0d\x9e\xd4\xe8\x68\x29\xf6\xa6\x92\x4b\x83\x54\x4d\x30\x97\x29\x4d\xaf\x1e\x41\x3b\x95\x52\x5d\xf0\xb6\x51\x11\xe6\x45\x2c\xa6\xab\x78\xb2\xcf\x68\x04\x85\xa1\x80\x18\x98\xc9\xac\x6d\x5b\x6e\x98\x30\x75\x1e\x7b\x32\x76\xf3\x94\x3b\x42\x59\xcf\x05\x9d\xdc\x68\xcd\xac\x00\x50\x7d\x10\x02\x7e\x89\xca\x1b\xc8\x7f\x0a\x6d\xeb\x10\x5a\x24\x68\x63\x18\x07\x34\x70\x0a\x11\x1a\xcc\x50\x40\x1f\x1a\xcb\xb7\xc6\xa6\xc1\xa9\x0b\x08\xb1\x3a\xd9\xc5\x59\x72\xcb\x45\x61\x5c\xa3\xb0\x4a\x33\x12\x05\x0f\x79\x56\xea\x62\x16\x8a\x57\x36\x73\xf0\x02\x8c\x22\xb5\x08\x39\x6f\xe7\xd4\x90\xb6\x63\x15\xdb\x3c\x3e\x3f\x34\x49\xe0\xb3\xea\x07\x87\x62\x31\x5f\x35\xc5\xe1\x25\x2c\x07\x4e\x83\xf2\x6b\xa0\x14\x45\xf0\xee\x52\x1c\x7f\x9f\xeb\x7c\x01\x8c\x49\x64\xbd\xb7\xec\x2c\xa3\x27\x38\xc6\x44\xf6\xf7\xd4\xab\xe4\x0c\xcd\xcb\x81\x7a\x05\x52\x93\xb9\xda\x1a\xaa\x58\x07\xb6\x92\x6a\x25\x43\x32\x1b\x53\x2f\xae\xf4\x7e\x62\x60\x50\x13\x50\x37\x55\x0c\xb9\x45\xd3\xc7\x4c\x6c\xcf\x4b\xa6\x3d\xf0\x55\x5c\x1f\x8d\x89\xf1\x09\x7e\xeb\xdb\x7f\x26\x79\x85\x1a\x5e\x41\x5f\x80\x35\xcc\xee\xbb\xa8\xa9\x46\xb7\x2b\x6d\xf5\xc4\xcb\x15\x7b\xce\x1e\x19\x82\xad\xda\x2b\x14\x5b\x77\x19\xba\x0c\x25\x6c\x3b\xee\x8f\xf4\x90\x36\x58\xe1\xcf\x10\x1f\x78\xa7\x31\x65\x80\x2a\x9e\xec\x1d\xd4\xa3\x5b\x61\xfa\x97\x6c\xd6\x6d\xb4\x6d\x47\x53\x6a\xb0\xfe\x6e\xae\xb3\x73\xa1\xdd\xe8\x00\x16\xf6\x11\x37\x9b\x39\xea\x9e\xa8\x3c\xa7\xeb\xae\x92\x1c\x8d\x37\xb7\x6f\xcc\xee\x32\xd6\xdd\xe1\xf8\xf5\x6b\xf9\x6b\x20\xfe\x9a\x94\xf7\xf9\xa5\xfe\xf6\x8d\xdf\x91\xc3\x72\x7b\x77\xbc\x7f\xd6\x38\xe4\xb6\x86\x57\x7a\x9f\xcd\xa4\x79\x37\x6b\x0e\x11\x77\x8e\x7e\x23\xa5\x1f\xf2\x75\x3e\xbe\x7d\xc9\x8a\x7b\x72\x7a\x99\xd8\x6e\xfa\xc6\xfd\x1d\x00\x00\xff\xff\x9f\xcd\x61\x9a\xf4\x06\x00\x00")

func assetsTemplatesErrorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesErrorHtml,
		"assets/templates/error.html",
	)
}

func assetsTemplatesErrorHtml() (*asset, error) {
	bytes, err := assetsTemplatesErrorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/error.html", size: 1780, mode: os.FileMode(420), modTime: time.Unix(1456002792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\x3d\x67\x7f\x05\x97\x7b\x5d\x8a\x48\x7b\xe9\x41\x32\xb0\x0d\x0a\x74\x81\xa2\x2d\x8a\x14\xed\x95\x12\xc7\x12\x1d\x9a\x54\xc8\x91\x1d\xc3\xf0\x7f\xdf\xa1\x3e\x2c\xdb\x71\xb0\xce\x61\x0d\x18\xfc\x1a\xce\xcc\x7b\x8f\x1a\x32\xff\xa8\x7d\x85\xbb\x16\x58\x83\x6b\xbb\xf8\x90\xa7\x86\x59\xe5\xea\x82\x83\xe3\x8b\x0f\x77\x79\x03\x4a\x53\x7b\x97\xaf\x01\x15\xab\x1a\x15\x22\x60\xc1\x3b\x5c\x8a\x5f\xc8\x80\xd1\x6f\x5c\x6b\x10\x5b\x01\xcf\x9d\xd9\x14\xfc\x7f\xf1\xef\x17\xf1\xe0\xd7\xad\x42\x53\x5a\xe0\xac\xf2\x0e\xc1\xd1\xc6\xaf\xbf\x15\xa0\x6b\x38\xdf\xea\xd4\x1a\x0a\xbe\x31\xb0\x6d\x7d\xc0\x13\xeb\xad\xd1\xd8\x14\x1a\x36\xa6\x02\xd1\x0f\x3e\x33\xe3\x0c\x1a\x65\x45\xac\x94\x85\xe2\x9e\x3c\xa5\xf4\xd0\xa0\x85\xc5\x7e\x9f\x3d\xa6\xce\xe1\x90\xcb\x61\xa6\x5f\xb4\xc6\x3d\xb1\x00\xb6\xe0\x11\x77\x16\x62\x03\x40\x51\x9a\x00\xcb\x82\x4b\x59\x69\xb7\x8a\x59\x65\x7d\xa7\x97\x56\x05\xc8\x2a\xbf\x96\x6a\xa5\x5e\xa4\x35\x65\x94\xb8\x35\x88\x10\x44\xe9\x3d\x46\x0c\xaa\x95\x3f\x67\xf7\xd9\xbd\xac\x62\x94\xc7\xb9\x8c\x46\x63\x26\xb1\x0a\xa6\x45\x16\x43\x75\x83\xf3\xd5\x73\x07\x61\x27\x7f\xea\x3d\x0e\x83\x6c\x6d\x5c\xb6\x22\x6f\xb9\x1c\x5c\x2d\xde\xed\xf5\xad\x94\x57\xa7\x19\x9f\x87\xf8\x2e\x4d\x09\xae\x86\xa5\xea\x2c\x8e\x60\xef\x72\x39\x9e\x8e\xbc\xf4\x7a\xd7\xa7\xe9\xd4\x86\x55\x56\xc5\x58\x70\xea\x96\x2a\xb0\xa1\x11\xe3\xd6\x69\xb8\x34\x2f\xa0\x05\xfa\x96\xb3\xe0\x49\xc6\x64\x6d\x6a\x3a\x2d\xbe\x3f\x76\xe4\x49\x9b\xa3\xa7\x74\x1c\x94\x71\x04\x68\x69\x3b\xa3\x07\x03\xc6\xf2\x8f\x42\xb0\x5f\x83\x72\x9a\xa5\x3f\xfa\xba\xb6\xc0\x6a\x40\x56\x07\xdf\xb5\xa0\xd9\xd2\x07\x56\x42\xa2\x82\xad\x7d\x69\x68\x55\x9b\xd8\x5a\xb5\x63\x42\x4c\x4e\x4e\xe2\x8c\xb9\x25\x50\x10\xa6\x28\x64\x52\x76\x88\xde\xb1\xf4\xa1\x14\x7c\x18\xf0\x8b\x3d\x43\x70\xce\xb4\x42\x35\x0e\x52\xde\xd6\xaa\x36\x1e\xa7\x55\xa8\xd3\xb7\xf3\xa9\x8c\x02\x5e\xd4\xba\xb5\x20\xc6\xed\x93\xa5\xb8\x9f\xc3\x52\xe0\xd8\x2a\x37\x05\x8a\x41\x78\x67\x77\x7c\xf1\x38\xe0\x9c\x09\x23\x11\xc9\xee\xad\x7d\x86\xd8\x13\x14\xa3\x17\xfb\x47\xda\xe5\x72\xa0\x66\x9e\x50\x17\x24\x95\x49\xab\xe3\x81\xe2\x8b\x2d\x94\x71\x17\x75\x2e\xd5\x24\x86\x24\x35\xfa\xb3\x38\xc9\xfb\x40\xc4\x40\x85\x0c\x9b\x1e\x31\x4b\x47\x34\x7e\x4e\xc2\xae\xa9\x49\xb2\x7b\x5a\x0a\x53\xc5\xe8\x15\xef\xe9\x37\xae\xbe\x2e\xf2\x44\x35\xbb\xa0\x9e\x33\xa3\x49\xdd\x9b\xa4\xc9\x3b\x7b\x02\x6d\xf2\x44\xcd\x99\x7a\xd6\xec\xf7\xcc\x2c\x19\x3c\xb3\xec\x6f\x55\x03\xe3\xff\xf9\xf0\x44\x9c\x55\x10\x39\x3b\x1c\x26\x17\xaa\x42\xb3\x01\xbe\xdf\x83\xd3\x87\xc3\x82\x68\x3b\x32\x74\xc6\x7c\x6d\x77\x6d\x93\xe8\x67\x57\x7a\x02\x1b\x61\x4d\xc4\xa3\x2c\x6c\x0e\x96\x08\xce\xa9\x32\x9c\x24\x37\x64\x96\x1d\x6d\x28\x9d\x79\xf1\xee\x4a\xea\x8f\x2a\x3e\xdd\x96\xf5\x76\xf2\x29\xc9\xc7\x1c\x21\xfb\x93\x8a\x3c\xed\x7f\x27\xa8\x19\xcf\x55\x6f\xd7\xa1\x51\x4a\x67\x80\x46\xb4\x09\xc3\x2b\xa0\xec\x12\xe9\xef\xc4\xa2\x0f\xbb\x84\xf5\x12\xea\xe8\xf8\x76\xb0\x12\x29\x64\xbf\x94\x62\xdf\x4e\x81\xd0\x2a\x36\xa5\x57\x41\x9f\xe3\x3f\xf5\xf2\x6e\xe8\xff\x74\xee\xfb\xe8\x47\xc3\x1f\x88\x5e\x86\xce\x1d\x27\x29\x54\xf6\x55\xdf\xc6\x49\x2a\xdc\x33\x1d\x09\xcd\xa7\x57\x6e\xde\x43\xca\x39\xe8\xbf\x3a\x6c\x3b\xe4\xaf\x19\x3a\xa7\x61\x46\x7f\x43\xc6\x4b\xba\x72\x2e\x04\x4c\x8f\xad\xdb\xd2\xcc\x65\x67\xe7\xf5\x37\x4b\xce\xd4\x0d\xa6\x6e\xb0\xaf\x3f\x6c\xfa\x5d\x15\xf8\x4b\xdb\xfe\xe1\xeb\xdb\xf4\xb5\x64\x38\x55\x69\x46\x83\xb3\x4a\x72\x0c\x73\x92\xe8\x58\xc0\xd3\xfd\x3d\xf5\x72\x49\x09\xf6\x35\x9d\x1e\x67\x0f\x43\x99\x4e\x20\xe9\xba\xe8\x1f\x0d\xf4\x88\xe8\xdf\x9e\xdf\x02\x00\x00\xff\xff\xba\xae\xcb\x72\x8c\x0a\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 2700, mode: os.FileMode(420), modTime: time.Unix(1456002792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLogHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\xc1\x0e\x82\x30\x0c\x86\xcf\xee\x29\x1a\x3c\x3b\x12\x8f\x30\x77\x37\x31\x9a\x18\x5f\x60\xb2\x05\x08\xb8\x91\xad\xd3\x10\xb2\x77\xb7\x20\xd8\xe3\xf7\xf7\xef\x57\x11\x70\xec\x8d\x64\xbc\x72\x16\x55\x6b\x8d\x87\x89\x01\xcd\xa7\xd5\xd8\x14\xa0\x22\xba\x92\x25\x36\x78\xb3\x06\x4f\x55\x75\xb5\x77\xd1\xea\x02\xac\xb3\xa6\xfc\x51\xe7\xb5\xf1\x1b\x49\x4c\xe4\xeb\x61\xa1\xdb\x37\x54\xbd\x0a\xe1\x94\xfd\x1d\x99\x64\x3b\xd1\x1c\xe5\x34\x01\x7f\xa8\xd0\xf1\xab\x7a\x19\x48\x09\xf6\x1b\xb9\x47\xcb\xcf\x7a\x46\x07\x58\xd8\x38\xcc\x0b\x22\xa7\x16\x75\xe9\x9d\xa5\x7c\x71\xf5\x2d\xe2\x10\x71\xc9\x66\x4a\x66\x32\xca\x6f\x00\x00\x00\xff\xff\xff\xae\x20\x7c\xd8\x00\x00\x00")

func assetsTemplatesLogHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLogHtml,
		"assets/templates/log.html",
	)
}

func assetsTemplatesLogHtml() (*asset, error) {
	bytes, err := assetsTemplatesLogHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/log.html", size: 216, mode: os.FileMode(420), modTime: time.Unix(1456002792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNotfoundHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\xcd\x92\xe3\x34\x10\x3e\x27\x4f\xd1\x2b\xae\xab\xa8\xb2\x5c\x38\xd8\xa9\x82\x2d\x0e\xdc\x38\x40\xc1\x55\xb6\x3a\xb6\x32\xb2\xe4\x95\xda\xc9\xf8\xed\x69\xf9\x2f\xc9\x14\x03\xc3\x81\x54\x4d\x49\xdd\xea\xdf\xef\xeb\xf6\x14\x9f\x4c\xa8\x69\xec\x11\x5a\xea\xdc\x69\x5f\xe4\x03\x9c\xf6\x4d\x29\xd0\x8b\xd3\x7e\x57\xb4\xa8\x0d\x9f\xbb\xa2\x43\xd2\x50\xb7\x3a\x26\xa4\x52\x0c\x74\x96\x3f\xb0\x01\xf0\x6f\x79\x6b\x89\x7a\x89\xdf\x06\x7b\x2d\xc5\x9f\xf2\xf7\x1f\xe5\xd7\xd0\xf5\x9a\x6c\xe5\x50\x40\x1d\x3c\xa1\x67\xc7\x5f\x7e\x2e\xd1\x34\xf8\xec\xea\x75\x87\xa5\xb8\x5a\xbc\xf5\x21\xd2\x83\xf5\xcd\x1a\x6a\x4b\x83\x57\x5b\xa3\x9c\x84\xcf\x60\xbd\x25\xab\x9d\x4c\xb5\x76\x58\x1e\x39\x52\x2e\x8f\x2c\x39\x3c\xdd\xb0\x4a\x63\x32\x80\x31\x86\x58\xa8\x59\x39\xbd\x3b\xeb\x5f\x20\xa2\x2b\x45\xa2\xd1\x61\x6a\x11\x39\x51\x1b\xf1\x5c\x0a\xa5\x6a\xe3\x2f\xe9\x50\xbb\x30\x98\xb3\xd3\x11\x0f\x75\xe8\x94\xbe\xe8\x57\xe5\x6c\x95\x14\xdd\x2c\x11\x46\x59\x85\x40\x89\xa2\xee\xd5\xf7\x87\xe3\xe1\xa8\xea\x94\xd4\xa6\x3b\xb0\xb4\x14\x93\xea\x68\x7b\x82\x14\xeb\x0f\x04\xbf\x7c\x1b\x30\x8e\xea\xcb\x14\x71\x16\x0e\x9d\xf5\x87\x0b\x47\x2b\xd4\x1c\xea\xf4\x9f\xa3\xbe\x57\xf2\xe5\xb1\xe2\xe7\x14\xff\x0a\x53\x6e\xd7\xe0\x59\x0f\x8e\x96\x66\x77\x85\x5a\x06\xa4\xa8\x82\x19\xa7\x32\xbd\xbe\x42\xed\x74\x4a\xa5\xe0\x6b\xa5\x23\xcc\x87\x5c\x5c\x57\xf1\x6c\x5f\xd1\x48\x0a\xbd\x80\x18\x98\xc9\x6c\x6d\x1b\x1e\x98\x30\x4d\x1e\x47\x32\x76\x8b\x94\x27\x42\x5b\xcf\x0d\x9d\xdd\x60\xcd\x6c\x00\x50\x7c\x92\x12\x7e\x8a\xda\x1b\xc8\x7f\x14\x9a\xc6\x21\x34\x48\xd0\xc4\x30\xf4\x68\xe0\x1c\x22\x54\x98\xa1\x80\x2e\x54\x96\x5f\x8d\x4d\xbd\xd3\x23\x48\xb9\x06\x79\xc8\xb3\xd4\x96\x9b\xc2\xb8\x66\x61\x93\x6a\x20\x0a\x1e\xf2\xae\x94\x62\x16\xc4\x1b\x9f\x39\xb9\x00\xa3\x49\x2f\x42\xae\xdb\x39\xdd\xa7\x4d\xad\x63\x93\xd7\xe7\xbb\x2a\x49\x7c\xd5\x5d\xef\x50\x2e\xee\xab\xa5\x3c\xde\xd3\x72\xe2\xd4\x6b\xbf\x26\x4a\x51\x06\xef\x46\x71\xfa\x6d\xee\xf3\x0e\x18\x93\xc8\x76\xef\xf9\x59\x46\x4f\x72\x8e\x89\xec\xff\xd3\xae\x50\x33\x34\x77\x85\x7e\x03\x52\x95\xb9\xda\x06\x4a\xac\x0b\x5b\x28\xbd\x92\xa1\x98\x8d\x69\x16\x57\x7a\xbf\x32\x30\x58\x13\x50\x3b\x75\x0c\x79\x44\xd3\xe7\x4c\x6c\xc7\x47\xa6\x3d\xf0\x53\x5c\x3f\x1a\x13\xe3\x13\xfc\xd6\x37\x7f\x4f\xf2\x0a\x35\xbc\x81\x5e\x80\x35\xcc\xee\x87\xa8\x29\x06\xf7\xd0\xda\x1a\x89\x8f\x27\xf6\x9c\x3d\x31\x04\x5b\xb7\x4f\x28\x36\x6e\xec\xdb\x0c\x25\x6c\x37\x9e\x8f\xf4\x92\x36\x58\xe1\x8f\x10\x5f\xf8\x56\x63\xca\x00\x15\xbc\xd9\x0f\x50\x0f\x6e\x85\xe9\x1f\xaa\x59\xaf\xd1\x36\x2d\x4d\xa5\xc1\xfa\xdb\x3d\x57\xe7\x42\xb3\xd1\x01\x2c\x3c\x66\xdc\x7c\xe6\xac\x8f\x44\xe5\x3d\x5d\x6f\x85\xe2\x6c\x7c\xd9\xbf\xb3\xbb\xcb\x5a\xb7\x5f\x4e\xbf\xea\x86\xd1\x0f\x99\xac\xc1\x33\xfb\xac\xda\xdf\x03\xf1\x18\x4d\x1f\x13\xd6\x4f\xff\x96\xfe\x0a\x00\x00\xff\xff\xf1\xc1\xf2\x59\xa7\x06\x00\x00")

func assetsTemplatesNotfoundHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNotfoundHtml,
		"assets/templates/notfound.html",
	)
}

func assetsTemplatesNotfoundHtml() (*asset, error) {
	bytes, err := assetsTemplatesNotfoundHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/notfound.html", size: 1703, mode: os.FileMode(420), modTime: time.Unix(1456002792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTaskHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\x6d\x6f\xdb\xb6\x13\x7f\x6d\x7f\x0a\x42\x09\x60\x1b\xf8\x5b\xca\xbf\x43\xdf\xb8\xb2\x80\xa1\x0b\x86\x02\x43\x51\xb4\x03\x0a\x6c\xd8\x0b\x46\xa4\x2d\xc2\x12\xa9\x91\x94\xed\xa0\xc8\x77\xdf\x1d\x49\x3d\xd8\xb1\x9d\xac\x4b\x86\x25\x48\x44\x1d\x7f\x3c\xde\xf3\x9d\x52\x63\xef\x4b\x9e\x8d\xc7\x96\x91\x5a\x73\xf2\x6d\x4c\xe0\xe7\x8e\xe6\x9b\xb5\x56\x8d\x64\x0b\x22\x95\xe4\xef\x3c\x55\x69\xc6\xf5\x90\x52\x53\xc6\x84\x5c\x2f\xc8\x8d\x7f\xcf\x55\xa9\x00\x70\x75\x73\x13\x08\xbb\x42\x58\x3e\x37\x35\xcd\xf9\x02\xf9\xcf\x77\x9a\xd6\xef\xc6\x0f\x63\x5b\x9c\xb8\xea\x6a\xf5\x16\x7f\x71\x3f\xb6\xd4\x6c\xe6\xaa\xb1\x75\x63\x03\xb2\xa2\x7a\x2d\xe4\xdc\xaa\x7a\x41\xde\xd6\x7b\x44\x5d\x21\x4a\x37\xd2\x10\xab\x17\x85\xda\x72\x0d\xd8\x51\xde\x68\x83\x62\xd4\x4a\x48\xcb\xb5\x63\x67\x72\xad\xca\xd2\xef\x57\x74\x3f\x2f\xb8\x58\x17\x76\x41\xfe\xff\xe6\x06\x59\x8d\xf0\xec\xaa\x54\xbb\xf9\xfd\x82\x78\x2c\x1e\x4b\x93\x60\x9e\x14\x68\xa2\xb6\xd9\xf8\x7a\xba\x6a\x64\x6e\x85\x92\xd3\x59\x90\xeb\x7a\x1a\xfd\xce\xa8\xa5\x20\xd9\x7a\x5d\xf2\xe5\xc4\x2a\x55\x5a\x51\x4f\xfe\x88\x66\x71\x58\x4f\x67\xef\x02\x76\x32\x94\x79\x32\x8b\xf3\x52\xe4\x9b\x9e\x29\x6f\xb9\x3a\xeb\x09\xc9\xd4\x2e\x2e\x55\x4e\x71\x33\x2e\x34\x5f\x91\x25\x30\xe1\x60\x1e\xbd\xe6\x76\x16\xd7\x54\x73\x69\xcd\x74\xe2\x98\xad\xe0\xc0\x34\x02\x57\x52\xb8\x9a\x5a\xab\xa7\x13\x3c\x33\x99\x39\x96\x0f\x20\x04\xfe\x81\x56\x41\x9b\x94\x89\x2d\xc9\x4b\x6a\xcc\x32\xca\x95\xb4\x54\x48\xae\xa3\x6c\x3c\x4a\x8b\x37\xe4\xdb\x37\x22\x56\x24\xfe\x15\xc4\x8d\x7f\x04\xe9\xb6\x1c\x97\x0f\x0f\x01\x6f\xf9\xde\xce\x4d\x93\xe7\xdc\x98\x08\xb0\xbc\x34\x9c\x1c\xee\x32\x2a\xd7\xc0\x0f\x37\x25\x83\xbd\x0c\x56\x9e\xdf\x47\x5a\x21\x38\x4d\x8a\x37\x78\xdb\x4a\xe9\x8a\x54\xdc\x16\x8a\x2d\xa3\x5a\x19\xeb\x64\xb0\xf4\xae\xe4\xad\x78\xfe\xc5\xfd\x9f\x83\xa8\x8c\x4b\xc3\x19\xc2\x00\xa7\xf1\x01\xcf\x82\x38\x77\x2d\xa3\x9d\x60\xb6\x00\xe7\xfe\x00\xce\x8d\xb2\xdb\x3d\xcf\x1b\xab\x74\x9a\xd8\x22\x20\x59\x96\x42\x34\xf6\xf2\xfc\xcc\x6d\x8b\x72\x62\xe1\x26\xc0\x99\xe3\x9f\xf8\x0b\x06\xf7\x64\xef\x55\x55\x51\xc9\x2e\x70\x0c\x88\x67\x71\xfb\x62\x19\x44\xfa\x01\xb3\xa1\xf1\xfd\x36\x72\x3a\xb8\xa1\x27\x27\x81\x1e\x5c\xf0\x41\xce\x2b\x5e\x29\x7d\xdf\x19\xfe\x89\xcb\xb9\xd6\x97\x2e\x87\xed\x53\x97\x07\xf2\x3f\xba\xfc\x56\x6e\x85\x56\xb2\x82\x18\x3e\x2b\xc1\x00\x13\xc4\x68\x63\xa2\x4d\xea\x08\xf1\x1a\x83\x8d\x5c\x6f\xfe\x47\xae\xb7\x64\xb1\x3c\x79\x18\x60\xd7\x1b\x78\x42\x12\xe1\x72\x0b\xcb\xf1\x40\xce\x56\x93\xa7\x6d\xc6\xf5\x56\xe4\xfc\x40\x64\x7c\x8e\xbc\xdc\x52\xd9\xd6\x4c\x1e\x88\xf7\x90\xa3\x9f\xf4\xae\xb1\x56\x49\x82\xb1\x4f\x5d\xf2\x2f\xa3\x64\xa7\xf4\xc6\x55\xcb\x04\x2d\xfd\xb5\x7d\x6b\xf3\x25\xc1\xda\x91\x1c\x67\x51\xc2\x25\xa6\x45\xd4\x9a\xe5\xce\x4a\x02\x7f\xf3\xbd\x71\x8f\x36\x47\xb3\x14\x78\xc9\x16\xb4\x2e\xef\xeb\x42\x40\x26\x91\x6e\x35\xaf\x4b\x7a\x0f\xb0\x04\x71\x19\xb9\x75\x5c\xd3\xc4\xcb\x99\x3d\x52\xa0\xf7\xf9\x6b\xea\xc6\x84\xb9\xa4\x5c\x28\x31\x4f\xeb\x66\xa0\x6f\xf4\xba\xfd\xe4\xb9\x5e\x56\xce\x85\x81\x73\xef\xc5\xf4\xa1\xb6\x31\x47\x91\x80\x1c\xda\x60\xe0\x7f\x76\x29\x83\x48\x12\x7d\x01\x49\x6a\xa8\x5d\x8e\xb9\x47\x8e\x5e\xd0\x60\x06\x5a\x83\x7d\xe9\x58\xf8\x82\x4c\x7b\x6b\xf5\x0a\xb6\x11\x30\x7a\xc5\x10\x70\xae\x7b\x59\xff\x1f\x54\xb8\x2e\x47\x3f\x73\x67\xbc\x5e\x2d\x74\xd5\xa0\x20\x9c\x50\xff\x59\x31\xe2\xbb\x27\x41\xed\xce\x95\x8c\xe3\x36\x7b\x10\x1c\x83\x2e\xed\xc6\x22\x98\x1e\xa2\x4e\x0a\xd8\xa7\x04\xbb\xfc\x77\xdb\x17\xd8\xf5\xc4\x5e\x84\xf8\x03\xea\x16\x65\x57\x67\xf7\xd2\x84\x3a\x53\x5e\x14\x1e\x32\x78\x9b\x9d\xd7\xc5\x8f\x78\xae\x91\xb7\x10\x7a\xce\xd7\x7c\x45\x9b\x12\x62\xfb\xf5\xb4\x85\x58\xc3\xa6\xfa\x8c\x78\x5a\x09\x28\x4a\x5d\x3c\x99\xd0\xc1\xe9\x7f\x48\x0f\xe8\xcf\xdf\xa3\x87\x1b\x06\x68\x76\xc6\x81\xc7\x29\x8f\x00\x91\x7d\x84\x2f\x82\x34\x11\xa7\x32\xc3\x11\x8e\x93\x03\x9b\x2f\x6a\xd5\xf5\x69\x9f\x44\x48\xde\x19\x47\xec\xac\xd0\xed\x84\xfe\x2e\x41\x7d\x68\xf1\xbc\x3c\x84\xc1\xbc\x55\x36\x15\x0c\xd5\x21\x1b\x43\xf6\xb9\xf4\x43\xb6\xb2\x1d\x38\x31\xfd\x86\x75\xaa\x1d\x37\xe0\x62\x9c\x02\x3d\x9b\x20\xdd\xe0\x14\x3b\x3c\xe5\x15\x39\xd1\x2c\x60\x03\x1b\x0b\x7c\x50\x5d\x98\x5f\xfd\x87\x14\x67\xe1\xd5\x7d\xb8\x44\x44\x30\x9f\x12\xf8\x6d\x70\x3c\xd8\x66\x9f\x1b\x39\x28\x1d\x45\xf6\x49\xb0\x83\xf7\xdb\xbd\xb0\xe0\xbd\xa3\x5e\xe4\xda\x93\xb6\x9c\x1d\xd1\x5c\x03\x3a\xa0\xfd\xa2\xd6\xdd\xc1\xe0\x25\x34\x0a\xfa\x06\x02\xaa\x1b\xa7\x42\xf0\xf9\xcd\xaf\x26\x6c\x3d\x0a\xd9\x71\xef\x30\x7f\x0e\xff\x7d\x6e\x82\x7b\x9c\x01\xad\x6e\x2d\x33\x98\x99\x82\xb4\xf1\x07\xf3\x1b\xd7\xca\x0f\x6c\x58\x1c\x83\xc4\x3d\x5d\xc8\x95\xea\x43\xd1\xa3\xd6\xc0\xe0\x2b\x15\xd6\xf7\xd9\x18\x2d\x12\x5a\xee\x0d\x60\x7c\xa3\xe8\xcf\x84\x4e\xd8\xb9\xee\xf1\xa2\x2b\xb1\x6e\xb8\x3f\x5d\x63\xbd\x0d\x06\x39\xda\x5a\x6c\x90\xa0\xc3\x32\xda\x95\xcd\x90\x11\xc3\x08\x8c\xdf\x57\x2c\xfe\xa4\x15\x8a\x15\x83\x7f\xfb\x19\x74\x88\xea\x4d\x75\x64\x12\x57\x3b\x4e\xaa\xef\x75\xf2\x6a\x0f\x92\xd5\x2b\xfa\xc4\x25\x8f\xfd\xd1\x12\x87\xa6\xfa\xbb\x72\x06\xe2\x25\x16\x6d\x29\xf9\xbe\x2a\xfa\x6c\xbf\xbc\x44\xc1\xff\xd7\x04\x7d\x91\x8a\x3e\x30\x74\x9f\xe8\x8f\xca\x17\xac\x70\x72\xcb\xc6\xa1\xfc\xff\x15\x00\x00\xff\xff\xf7\x59\x94\x56\x28\x12\x00\x00")

func assetsTemplatesTaskHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTaskHtml,
		"assets/templates/task.html",
	)
}

func assetsTemplatesTaskHtml() (*asset, error) {
	bytes, err := assetsTemplatesTaskHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/task.html", size: 4648, mode: os.FileMode(420), modTime: time.Unix(1456052197, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTaskrunHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x55\xef\x6b\xf3\x36\x10\xfe\x1c\xff\x15\xc2\x0d\x34\x85\xd9\xee\x3a\xf6\x25\x75\xfc\x61\xa3\x8c\xc2\x28\x65\x1b\x14\x36\xf6\x41\xb1\xce\xb6\x88\x2d\x19\x49\x4e\x13\x4a\xff\xf7\xf7\xce\x3f\x52\x27\x69\xda\xd0\xf7\xc3\xdb\x92\xe8\xa2\x7b\xf4\xdc\xe9\xb9\x93\x14\x5b\xb7\x2d\x21\xf1\x9c\x60\xb5\x01\xf6\xe2\x31\xfc\x5b\xf2\x74\x95\x1b\xdd\x28\x31\x67\x4a\x2b\xb8\xed\x66\xb5\x11\x60\xc6\x33\x35\x17\x42\xaa\x7c\xce\xae\x6f\xbd\x57\x2f\x74\x7c\x59\x02\x73\xc5\x3b\x2c\x17\xd9\xaf\xf4\xdf\xc2\x6c\x6a\x74\x59\x82\x41\xd8\xa4\xe2\x9b\xa0\x00\x99\x17\x6e\xce\x7e\xbe\xb9\xae\x37\xb7\xde\x44\xaf\xc1\x64\xa5\x7e\x0e\xb6\x73\xd6\x61\x69\x59\x1c\xf5\x99\xc6\x38\x27\x6b\x97\x78\xd3\x59\xd6\xa8\xd4\x49\xad\x66\x57\x7d\xc8\xe9\xcc\xff\x4f\x70\xc7\x03\xa7\xf3\xbc\x84\xc5\xa5\xd3\xba\x74\xb2\xbe\xfc\xdf\xbf\x0a\x7b\x7b\x76\x85\x74\xf8\x41\xc2\x9e\x28\x16\x72\xcd\xd2\x92\x5b\xbb\xf0\x53\xad\x1c\x97\x0a\x8c\x9f\x78\x93\xb8\xb8\x19\xe6\x5f\x5e\x98\xcc\x70\xeb\x8e\x85\xff\x70\xbb\xfa\xab\x51\xe1\xdf\x8e\x1b\x07\x22\xbc\xb7\xff\x82\xd1\xec\xf5\xb5\xc3\x8c\xfc\xba\xae\xc7\x7e\x07\x1b\x17\x48\x95\x69\x04\x42\x69\x61\xb7\x24\x1f\xb1\x3e\x71\xe9\x90\xd9\x35\x36\xbc\xdb\x0c\x26\xbb\x1e\x96\x0b\xae\x72\x30\x6f\x04\xed\xa4\x6d\xd2\x14\xac\xa5\x59\x25\x3a\xd6\x03\xc3\x4f\xd0\x6c\x63\x84\x0f\xbc\xa2\x85\xec\x62\x98\xa1\xa8\xf7\x04\x8a\xa3\xe2\x86\x76\x9d\x69\x53\xb1\x0a\x5c\xa1\xc5\xc2\xaf\xb5\x75\xad\x16\x5d\x75\x7b\x39\xfa\x52\xd3\x77\x80\x92\x09\x50\x16\x04\xc1\x10\x67\x68\xc0\xb1\x60\x6d\xc5\x16\xfe\xb3\x14\xae\xc0\xfa\xfe\x82\xf5\xf5\x93\xbb\x0d\xa4\x8d\xd3\x26\x8e\x5c\xd1\x23\x45\x12\x63\xf3\xbd\xa5\xf8\x07\xb8\x01\xd5\xa6\x45\x4e\x84\x8b\x96\x3f\xea\x02\x8c\xe2\x24\xbf\xeb\xaa\xe2\x4a\x9c\x66\xa4\x2d\xf6\xa0\xb3\x08\xef\xd4\x5a\x1a\xad\x2a\x50\x6e\x8f\xf4\xa0\xc2\x23\x18\xd1\xd2\x01\xea\xf5\x19\x7a\xbc\xd5\xdd\x50\xcd\xd8\x74\xf5\x13\x9b\xae\xd9\x7c\x71\x6a\x3d\x22\xa7\x2b\xaa\xcc\x82\x91\xb9\x46\xd3\xdb\x15\xb0\xcb\x79\xf4\xf3\x74\xf2\x7d\x5f\xbe\x93\xf8\xa7\xed\x7b\xe8\x1c\xb7\xd0\xc7\x21\xdb\x56\xff\x3c\xe4\xc1\x89\xd8\x0f\xd9\x3a\xcf\x0d\xf9\x28\x8f\xc2\xbd\x95\xba\x12\xe1\xa3\xd1\x74\x26\x42\xc4\x7d\xc2\x44\xc7\x0c\x5b\x95\xce\xd9\x77\x6d\xe0\xfd\x93\xdb\x6d\xa7\x3b\xac\xb1\x4c\x1e\xf0\xf2\x8c\x23\x79\x6e\x25\x85\x6e\xf6\x3b\x90\xc6\xc9\xd1\x45\x43\xb0\xbe\x03\x93\x7d\x4d\x07\xcf\xae\x7d\xba\x4c\xee\x55\x50\x41\xa5\xcd\x76\x97\x07\x0b\xd8\xf1\xca\xdf\x9a\x2c\xfc\x13\x14\xb9\x97\x5b\x07\xb6\x8d\x1e\xf3\xa1\xcb\x97\x4e\x31\xfc\x04\x1b\xdb\x0e\x02\x32\xde\x94\xce\x67\x85\x81\x6c\xe1\x47\xcf\xda\xac\x6c\xcd\x53\x88\x88\xf9\x69\xf8\x35\xdc\x40\x91\xc3\x58\xd1\xe1\xbd\x14\x99\x46\x45\x47\x57\x13\x5e\xfe\x94\x8f\x9f\xc4\x48\xa1\x86\xf8\x79\xb9\xad\x0b\x89\xf7\x0f\xdb\x59\x41\x26\x4b\x40\x58\x44\xb8\x84\xd9\x5e\x41\xde\x09\xf8\xb1\xd6\x60\xcc\x39\x5a\x23\xec\x84\xd6\xbd\xe7\x0b\x5a\xe3\xca\x63\xad\xe9\x45\xfb\x71\x72\x63\x4a\x5f\x91\xbb\x15\x91\xe4\x6e\xb3\x3f\x50\x1c\x07\x7a\x32\x5a\x8b\x5e\x19\x7c\x7b\x23\x7c\x7c\x93\x6f\x01\x00\x00\xff\xff\x2c\x37\x72\x8a\x86\x08\x00\x00")

func assetsTemplatesTaskrunHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTaskrunHtml,
		"assets/templates/taskrun.html",
	)
}

func assetsTemplatesTaskrunHtml() (*asset, error) {
	bytes, err := assetsTemplatesTaskrunHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/taskrun.html", size: 2182, mode: os.FileMode(420), modTime: time.Unix(1456002792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTasksHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x6d\x6b\x23\xb7\x13\x7f\xfd\xcf\xa7\x10\x9b\xfc\xb1\x0d\x5d\x6f\x7a\xf4\x4a\xf1\xc3\xc2\xd1\x96\x12\x28\x47\x69\x0e\xfa\xa2\xf4\x85\xbc\x2b\xef\x8a\xc8\xd2\x9e\xa4\x8d\x1d\x42\xbe\x7b\x67\x24\xed\x53\xb2\x8e\x13\x9a\xbb\xcb\x91\x8b\xa5\x79\xd0\xcc\x6f\x66\x7e\x92\x57\xc6\xde\x09\x96\x9e\xd9\x9c\x94\x3f\x90\xfb\x33\x02\x3f\x3b\xaa\x0b\x2e\x17\xe4\x72\x79\xf6\x80\x82\x4a\xb3\x20\xd9\xd0\xec\xa6\xd0\xaa\x96\xf9\x82\x48\x25\xd9\xd2\xef\x2a\x9d\x33\xdd\xec\x80\x49\xc9\x68\x4e\x6c\x39\x62\x74\xbe\x7d\x8f\xff\x50\x6b\xbe\xa3\x87\x92\xf1\xa2\xb4\xbd\x03\xd4\x2d\xd3\x5b\xa1\xf6\xf1\xdd\x82\x98\x4c\x2b\x21\x96\x21\xa4\x43\xec\x95\x17\xe4\xa7\xcb\xea\xe0\x1c\x58\x6a\x6e\x62\x55\xdb\xaa\xb6\x83\xc8\x63\xab\xaa\x05\x79\xdf\x6a\x6d\x04\x23\x56\x2f\x4a\x74\x1e\x14\xb3\x5a\x1b\x05\x21\x57\x8a\x4b\xcb\xb4\x53\xac\xa8\x64\x82\xcc\x2b\xad\x0a\xcd\x8c\x19\x71\xf9\x23\xba\xec\x67\xfc\x7d\x75\x20\x46\x09\x9e\x93\x73\x4a\xa9\xf3\x22\x54\x76\xc3\xf2\x60\x5c\xd1\x3c\xe7\xb2\x88\x05\xdb\x62\xe0\x8d\x39\xc4\x61\x79\x46\x45\x4c\x05\x2f\x00\x68\x70\xbe\x1c\xe8\xbb\xd3\x5a\xf5\x4c\x09\x8c\xb5\x3d\x22\x53\xd2\x52\x2e\x21\x99\x39\x22\x0d\x06\xa4\x7c\x17\x4e\xcc\xb9\xa9\x04\x05\xf4\xb8\x14\xa0\x12\x6f\x30\x1e\xb4\x5a\x25\xa1\xd2\x2b\xc0\x95\x57\x36\x3d\xbb\x98\x6e\x6b\x99\x59\xae\xe4\x74\x16\xac\x2f\xa6\xd1\xdf\x39\xb5\x14\x02\x28\x0a\xc1\xd6\x13\xab\x94\xb0\xbc\x9a\xfc\x13\xcd\xe6\xe1\xf3\x74\xb6\x0c\xba\x93\x16\xdb\xc9\x6c\x9e\x09\x9e\xdd\x74\x1e\x59\xe3\x12\x7f\xf6\x5c\xe6\x6a\x8f\xd0\x50\x14\xce\x4b\xcd\xb6\x64\x0d\x1e\x18\x78\xd0\x05\xb3\x33\x00\x5f\x33\x69\xcd\x74\xe2\x9c\x6d\xc1\x60\x1a\x41\xeb\x51\x38\x97\x5a\xab\xa7\x13\xb4\x99\xcc\x9c\xcb\x07\x88\x00\x7f\x21\xa5\x90\xca\x2a\xe7\xb7\x24\x13\xd4\x98\x75\xd4\xa2\x13\xa5\x4e\xbb\x2f\x0b\x70\x05\x89\x93\x96\xef\xd2\xfb\x7b\x32\xff\x4b\xe9\x1b\x53\xd1\x8c\xcd\x3f\xd2\x1d\x23\x0f\x0f\xab\x04\x24\x04\x44\x7c\xdb\x97\x5e\x99\xdf\x7d\x81\x41\x03\x76\x64\xe3\xb9\x10\x77\x55\xc9\xe1\x6c\xd2\x7e\x8a\x11\x7a\xe2\xfb\x21\x22\x96\x5b\x00\x34\xf2\xd6\x51\x0a\xb1\x83\x35\x1e\xcd\x24\x3a\xf3\xa1\x26\x10\xeb\xd3\xa8\x9b\x8e\x6c\xc3\x1e\x13\xc6\x1b\xaa\x49\x7f\x11\x9b\x3a\xcb\xd0\x8a\xc0\x18\xb1\x4e\x11\x44\x11\xa1\x9a\xd3\xf8\x96\x8a\x9a\x49\xb5\x5f\x47\x43\x04\x3e\x40\x09\x6f\xd9\x27\x98\x2e\x03\x91\xf5\x95\x77\x5c\xae\xa3\xcb\xc1\x0e\x3d\x3c\x36\xff\xa4\x2c\x15\x9d\xb5\x6b\xbb\x75\xb4\xe7\xb9\x2d\x17\x64\xa8\xfa\x07\xd3\x19\x94\xdd\x1f\x08\xda\xff\x5f\xf6\x4b\xd3\x20\x74\x34\x34\x42\xdd\x32\x60\xd9\x80\xd3\x81\xf8\x52\xa4\x72\x2a\x0b\xe8\x97\x57\x03\x75\x25\xe9\xd7\x86\xaa\x39\xf2\x25\x60\x3d\x0e\x0f\x38\xe1\x04\x60\xfd\x8f\x5b\xa5\x77\x64\xc7\x6c\xa9\x72\xc0\x44\x19\xdb\xcc\x93\x1f\xfa\x00\x6a\x60\x00\xfc\x3f\xf6\xac\x08\xb3\xe1\x97\x8e\x6f\xfb\x21\xba\x7b\xa1\x5b\xff\x6f\x65\x75\x6f\x05\xcb\x32\xc5\x50\x57\x09\x7c\x68\xf7\x7b\xd6\xe9\x35\xd3\xb7\x3c\x63\xe4\xe4\xe4\x7d\xae\x99\x41\xa6\x89\x0d\xf0\x6b\x44\xfa\x94\x16\x05\x1a\x0b\xbb\x40\x96\x19\xdb\x01\xb0\x28\xa8\xda\x31\x0d\x27\x19\x28\x1f\x83\xb2\x50\x6d\x21\x2d\x5a\x5b\xb5\xa3\x8e\xb9\xc5\x5d\x3b\xc2\xc3\x70\x7d\x1a\xa1\xa1\xed\xb3\xd9\x7c\x70\x4c\x69\xc6\x15\xa0\x92\x1a\xbb\x92\x5c\x48\xe0\xa3\xef\xc8\x05\x5c\x4d\x8b\x75\xbf\xba\x3f\x2b\x51\xef\xa4\x69\xb8\x63\xec\x04\x70\xe2\xcc\x1d\x9d\x1d\x39\xa5\x47\x3f\xbe\x28\x49\xbf\x2a\x68\x36\x28\xda\xca\x6e\x54\x7e\xd7\xad\xf1\x88\xbd\x19\x86\xd6\xf7\xd7\xe6\x31\x6f\xba\xf0\xec\x51\x00\x17\x88\x92\x73\xf0\x58\x38\xe8\x0f\x1f\x9c\xcd\x9f\x26\xe1\x54\x29\xc1\x0b\x62\x1d\x25\xfb\x26\x8a\xc4\x87\xd6\xf0\x79\x82\xc7\xe0\x5e\xb3\x11\x35\x0d\x14\x38\xbe\xa3\x16\x10\x5a\x76\xb0\x0d\x81\x22\x48\xc2\xb0\x66\xd7\x93\x45\x8b\x5c\x94\xf6\x7c\xae\x12\x3a\x52\xeb\x64\x2c\xea\xa3\xa9\xf8\x70\xa4\xb2\x64\xde\xf4\xfb\xb1\x12\x6f\x6a\x6b\xa1\xef\x71\x52\xa9\x6b\xa6\xd7\xe4\x9f\x30\x89\x63\xda\xc2\xb0\xb1\x92\xc0\x6f\x7c\x30\xee\x4f\x73\x7b\xa4\x27\x87\x0d\xdf\x1b\xed\x34\x90\x5f\x9d\xd7\x55\xe2\x63\x3b\x9a\x62\x40\xf4\x4b\xe4\x05\x4f\xa0\xe7\x12\x0b\x64\x7f\x3a\x2f\x83\x84\xd0\xe6\xf5\x8b\xf7\x7a\x3a\xb1\xe1\x3c\xfd\xa7\x26\x18\xf6\xe4\xa8\xa2\xf3\xd2\xbb\xe4\xdc\x9b\x58\xd7\x32\x1a\xf7\xdb\x9a\xbc\x7e\x5e\x12\xf0\xea\xd6\x5d\x50\xf3\x2b\x3f\x01\xe7\x63\xdb\x38\x0b\x64\x28\x78\x36\x89\xfe\xb5\xfd\x82\x1c\xfd\xbb\xff\x74\x9a\x47\x9a\x80\x6d\x69\x2d\x6c\xf4\x76\x28\xc0\xf3\x3a\x57\x18\xd0\xc9\xbe\xda\x72\x68\xce\xb6\xaf\xbc\xd9\x28\x71\x7c\xc3\x4c\x98\x7e\xc9\x84\x3c\xc9\x04\xcc\x9e\xcd\xe4\x99\x22\x9f\xe0\x04\x67\xcd\xd3\x8f\xf0\x15\x73\x95\xf0\xaf\x32\x7d\xec\x33\x30\xb0\xa5\xb6\x36\x24\xba\x06\x2e\xa8\xf0\x19\xff\x65\x28\xcb\xbd\x30\xde\x9a\x89\xaf\xd1\xe9\xb7\x24\x62\x47\xa0\x6f\xcb\xc2\x81\x17\xbb\x8b\xf1\x4f\xe6\xb0\xeb\x12\xc1\x4a\xb5\x8d\xf0\xb6\x6c\x7d\xe4\x4d\x86\x18\x9c\x7c\x8c\xe5\x69\x40\xeb\x37\x66\xbd\x72\x78\xf8\xf4\x1e\x68\xe3\x47\x8e\x84\x38\x7c\xa3\x3d\xd5\x01\x79\xf7\x4a\x83\x05\x5e\x5c\xcd\x02\x6b\x09\x5f\x98\xfd\x20\xfe\x1b\x00\x00\xff\xff\x75\x3d\xa2\xad\xfe\x11\x00\x00")

func assetsTemplatesTasksHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTasksHtml,
		"assets/templates/tasks.html",
	)
}

func assetsTemplatesTasksHtml() (*asset, error) {
	bytes, err := assetsTemplatesTasksHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/tasks.html", size: 4606, mode: os.FileMode(420), modTime: time.Unix(1456052215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesWorkspacesHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xdf\x8b\xe3\x36\x10\x7e\xcf\x5f\x21\xdc\x1c\x49\xa0\xb6\xb7\xc7\x5d\x29\x89\x13\x28\x6d\x29\x85\x52\x4a\xf7\xa0\x0f\xa5\x0f\x8a\xad\xd8\x22\x8a\xe4\x4a\x72\x92\x65\xc9\xff\xde\x19\x4b\x8e\xed\xc4\xb9\xdc\x96\x5d\x68\x20\x24\x96\x46\xdf\x7c\xf3\xcd\x0f\x2b\x31\xf6\x49\xb0\xd5\xc8\x66\xa4\xf8\x40\x9e\x47\x04\x3e\x3b\xaa\x73\x2e\xe7\xe4\x61\x31\x3a\xe1\x46\xa9\x99\xdf\x59\xd3\x74\x9b\x6b\x55\xc9\x6c\x4e\xa4\x92\x6c\xe1\x56\x95\xce\x98\x6e\x56\x4e\xa3\x68\x47\x8f\x05\xe3\x79\x61\x3b\x47\xd5\x9e\xe9\x8d\x50\x87\xf0\x69\x4e\x4c\xaa\x95\x10\x0b\xef\xec\x18\x3a\xe3\x39\xf9\xee\xa1\x3c\xd6\x00\x96\x9a\x6d\xa8\x2a\x5b\x56\xb6\xc7\x29\xb4\xaa\x9c\x93\x8f\x67\xab\xb5\x60\xc4\xea\x79\x81\xe0\xde\x30\xad\xb4\x51\x40\xa6\x54\x5c\x5a\xa6\xd1\xb0\x78\xdf\x07\x59\x2b\x6b\xd5\xce\xc7\x17\x95\x54\x32\x41\xa2\x52\xab\x5c\x33\x63\x06\xfc\x7d\x8b\xfe\xba\x81\x7e\x53\x1e\x89\x51\x82\x67\xe4\x2b\x4a\x69\x0f\x05\x7f\xc0\x41\xf6\xe4\x71\x4a\x9a\x65\x5c\xe6\x97\xce\x5a\x33\x1f\xc5\x2d\x82\x1d\x0c\x47\xc6\xe1\x08\x95\x6e\x59\xd6\xf7\x11\x0a\xb6\x41\x11\x1b\xb6\xa0\x89\xe5\x29\x15\x21\x15\x3c\x87\x74\xc2\xf1\x01\xbc\xb3\x79\xaa\x04\xea\xd6\x44\x94\xc4\xbe\x32\x12\xc8\x16\x2f\xed\x6a\x34\x9e\x6e\x2a\x99\x5a\xae\xe4\x74\xe6\x3d\x8f\xa7\xc1\x5f\x19\xb5\x14\xa0\xf2\x5c\xb0\xe5\xc4\x2a\x25\x2c\x2f\x27\x7f\x07\xb3\xc8\xff\x9f\xce\x16\xde\x76\x72\xce\xd8\x64\x16\xa5\x82\xa7\xdb\x16\x91\x35\x90\xf8\x39\x70\x99\xa9\x03\x06\x49\x71\x33\x2a\x34\xdb\x90\x25\x20\x30\x40\xd0\x39\xb3\x33\x50\x50\x33\x69\xcd\x74\x52\x83\x6d\xe0\xc0\x34\x80\x52\xa5\xe0\x97\x5a\xab\xa7\x13\x3c\x33\x99\xd5\x90\x27\x60\x80\x5f\x08\xc9\x87\x92\x64\x7c\x4f\x52\x41\x8d\x59\x06\xa9\x92\x96\x72\xc9\x74\xb0\xaa\xad\x93\x8d\xd2\x3b\xb2\x63\xb6\x50\xd9\x32\x28\x95\xb1\x7e\xe3\xf9\x99\x68\x2a\x73\x46\xa2\x3f\x95\xde\x9a\x92\xa6\xcc\x90\xd3\xe9\xcc\x1a\xf6\xc7\x07\x43\xe6\x4b\x12\x75\x97\xbb\xbe\x5c\xfa\x5d\xf6\x33\xb6\xa1\x95\x68\xc0\x6f\xd8\x42\x6b\x50\xcc\x55\xcf\xea\xc2\xae\x29\xdc\xb2\x12\x22\xd4\xd8\x49\x01\xa9\x73\xb7\x0c\x0e\x3c\xb3\xc5\x9c\x7c\xf8\xf8\xee\x02\x60\x18\x22\x5c\x53\x4d\xba\x0f\xa1\xa9\x52\x88\xd2\x04\x04\x1a\x96\xb5\x86\xb0\x15\x10\xaa\x39\x0d\xf7\x54\x54\x4c\xaa\xc3\x32\x70\xe1\x47\xdf\x43\x3e\xf7\xec\x13\x34\x30\x8a\xd3\xb5\xda\x71\xb9\x0c\x1e\x7a\x2b\xf4\x78\x3e\xf7\x49\x59\x2a\xda\x63\xfd\x00\xbc\xcd\xef\x4c\xa7\x90\x75\xe7\x02\xcc\xde\x2d\xae\xc2\x82\xc0\x20\x33\x72\x35\xc8\x86\xd0\xfa\x11\xea\x00\x4d\x2e\x05\x89\x41\x91\xff\xa6\x52\x86\x65\xa1\x5f\x20\xd2\x2f\x92\xbe\xbd\x4c\x8d\x93\x2f\x12\xea\x92\x11\xe1\xf2\x85\x62\x0d\x2d\xc1\xe4\xf5\x0c\x33\x6e\x4a\x41\x61\xf6\x73\x29\xa0\xd9\xc2\x35\x4e\x30\x60\x95\x50\x82\x9d\xba\x0c\xe2\x43\xd3\x54\xb1\xa7\xf4\x1b\xdd\x21\xf7\x60\xd5\x7f\x4e\x62\xba\x4a\xe2\xe2\x3d\x2e\xf3\x8d\x23\x6f\x7e\x75\xf3\x10\x76\x91\x2d\xb1\xdc\xa2\x53\xb7\x1a\x34\x09\xf4\x43\x33\x17\x4f\x65\xc1\xa1\xed\xdb\x7f\x21\x6e\x01\x99\xb8\x91\x84\xc9\xac\xdb\xc3\x03\xd1\x5d\xb7\x2a\x8e\xf3\xcb\x3e\x75\x03\xcf\x9b\xd5\x0f\x03\x89\x68\x07\x4b\xa3\xfe\x95\x89\x37\x1b\xe3\x8b\xf1\x6a\xc2\xf4\x3d\xea\x6b\x07\xed\x66\x86\x82\x7b\x3a\x4e\xbf\x4e\x8b\x00\xa6\x65\x47\xdb\x34\x3d\xca\x20\x0c\x6b\x56\x5d\x91\x9f\xb5\x09\xee\xe5\x2d\x46\xae\xb8\xd6\x4b\x64\x3f\x8b\xc0\xe7\x26\xd9\xb3\x2a\x63\x09\x47\xbe\x26\x63\x98\x9c\x10\x39\x7a\xf8\x41\x89\x6a\x27\x6f\x0a\xd5\x0d\xd7\x73\xfa\x99\x59\x77\xc8\x4b\x58\x63\xd6\x34\xee\x50\xb8\x2a\x84\x2b\x17\x97\xb3\x16\xee\x30\x03\x39\xbe\x80\x05\xe1\xa5\xb2\x24\x7a\x64\x7a\xcf\x53\x76\x37\x92\x75\x05\x37\x02\x49\xf0\xd5\x44\xeb\x17\xe6\x4b\x84\x8f\x99\xac\x2b\xaf\x49\xfc\xda\x4a\x02\xdf\xf0\x68\xea\x9f\x66\xc6\xaf\x5c\xef\x78\xa3\xa1\x2e\xc1\x0e\x3e\x77\x09\xf9\xa9\x46\x4d\x62\xc7\xed\x6e\xc8\xbe\x96\xde\x32\x4e\x18\x32\x9f\x0b\xd4\x8f\xe9\xfb\x71\x1a\xb8\x19\xb5\x71\xfe\xe8\x50\xbf\x3c\xd0\x3b\x25\xf3\xd9\x92\x1b\x2e\xa8\x05\xa9\x5b\xd0\x5f\xe4\xea\x77\xfc\xd0\x44\xbf\x20\x02\x45\xc6\xfe\x81\x1a\xb3\xd4\x56\x86\x04\x8f\x10\x55\x89\xe3\xf0\x6d\x93\x60\xe0\x8a\x66\x5f\xbb\xd6\x1e\x11\xf4\xff\x54\x6a\x75\x89\xbc\x6e\x9d\xf9\x79\xdc\x8e\x84\x3f\x58\xad\x65\x1b\x10\x66\xf0\x5c\x60\x6f\x5f\x8f\xb0\x33\xf0\x32\x19\x46\x04\x5b\x6c\x92\xd5\xed\x57\x66\xe7\xb1\x0f\x91\xc4\x98\x03\xb8\x94\x3b\x83\x7f\x03\x00\x00\xff\xff\xdd\x0e\x74\xe5\x92\x0e\x00\x00")

func assetsTemplatesWorkspacesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesWorkspacesHtml,
		"assets/templates/workspaces.html",
	)
}

func assetsTemplatesWorkspacesHtml() (*asset, error) {
	bytes, err := assetsTemplatesWorkspacesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/workspaces.html", size: 3730, mode: os.FileMode(420), modTime: time.Unix(1456052281, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/css/default.css": assetsCssDefaultCss,
	"assets/templates/applog.html": assetsTemplatesApplogHtml,
	"assets/templates/error.html": assetsTemplatesErrorHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/log.html": assetsTemplatesLogHtml,
	"assets/templates/notfound.html": assetsTemplatesNotfoundHtml,
	"assets/templates/task.html": assetsTemplatesTaskHtml,
	"assets/templates/taskrun.html": assetsTemplatesTaskrunHtml,
	"assets/templates/tasks.html": assetsTemplatesTasksHtml,
	"assets/templates/workspaces.html": assetsTemplatesWorkspacesHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"default.css": &bintree{assetsCssDefaultCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"applog.html": &bintree{assetsTemplatesApplogHtml, map[string]*bintree{}},
			"error.html": &bintree{assetsTemplatesErrorHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"log.html": &bintree{assetsTemplatesLogHtml, map[string]*bintree{}},
			"notfound.html": &bintree{assetsTemplatesNotfoundHtml, map[string]*bintree{}},
			"task.html": &bintree{assetsTemplatesTaskHtml, map[string]*bintree{}},
			"taskrun.html": &bintree{assetsTemplatesTaskrunHtml, map[string]*bintree{}},
			"tasks.html": &bintree{assetsTemplatesTasksHtml, map[string]*bintree{}},
			"workspaces.html": &bintree{assetsTemplatesWorkspacesHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

